{"ast":null,"code":"\"use client\";\n\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"selected\", \"selectedColor\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { theme } from \"../theme\";\nimport { Calendar as RNCalendar } from \"react-native-calendars\";\nimport { getScheduledWorkoutsForDate, getScheduledWorkoutsForDateRange, startScheduledWorkout } from \"../services/planningService\";\nimport { Calendar, Clock, Play, Plus } from \"lucide-react-native\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CalendarScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDate = _useState2[0],\n    setSelectedDate = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scheduledWorkouts = _useState4[0],\n    setScheduledWorkouts = _useState4[1];\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    markedDates = _useState6[0],\n    setMarkedDates = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isLoading = _useState8[0],\n    setIsLoading = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isStartingWorkout = _useState10[0],\n    setIsStartingWorkout = _useState10[1];\n  useEffect(function () {\n    loadScheduledWorkouts();\n  }, []);\n  useEffect(function () {\n    loadWorkoutsForDate(selectedDate);\n  }, [selectedDate]);\n  var loadScheduledWorkouts = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      try {\n        var today = new Date();\n        var startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n        var endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n        startOfMonth.setDate(startOfMonth.getDate() - 7);\n        endOfMonth.setDate(endOfMonth.getDate() + 7);\n        var workouts = yield getScheduledWorkoutsForDateRange(startOfMonth, endOfMonth);\n        var marked = {};\n        workouts.forEach(function (workout) {\n          var dateString = formatDateForCalendar(new Date(workout.date));\n          if (!marked[dateString]) {\n            marked[dateString] = {\n              marked: true,\n              dotColor: workout.isCompleted ? theme.colors.success : theme.colors.primary\n            };\n          } else {\n            marked[dateString].dots = [{\n              color: workout.isCompleted ? theme.colors.success : theme.colors.primary\n            }];\n          }\n        });\n        var selectedDateString = formatDateForCalendar(selectedDate);\n        marked[selectedDateString] = _objectSpread(_objectSpread({}, marked[selectedDateString]), {}, {\n          selected: true,\n          selectedColor: theme.colors.primary + \"33\"\n        });\n        setMarkedDates(marked);\n      } catch (error) {\n        console.error(\"Error loading scheduled workouts:\", error);\n        Alert.alert(\"Error\", \"Could not load scheduled workouts.\");\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function loadScheduledWorkouts() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var loadWorkoutsForDate = function () {\n    var _ref3 = _asyncToGenerator(function* (date) {\n      try {\n        var workouts = yield getScheduledWorkoutsForDate(date);\n        setScheduledWorkouts(workouts);\n        var newMarkedDates = _objectSpread({}, markedDates);\n        Object.keys(newMarkedDates).forEach(function (dateString) {\n          if (newMarkedDates[dateString].selected) {\n            var _newMarkedDates$dateS = newMarkedDates[dateString],\n              selected = _newMarkedDates$dateS.selected,\n              selectedColor = _newMarkedDates$dateS.selectedColor,\n              rest = _objectWithoutProperties(_newMarkedDates$dateS, _excluded);\n            newMarkedDates[dateString] = rest;\n          }\n        });\n        var selectedDateString = formatDateForCalendar(date);\n        newMarkedDates[selectedDateString] = _objectSpread(_objectSpread({}, newMarkedDates[selectedDateString]), {}, {\n          selected: true,\n          selectedColor: theme.colors.primary + \"33\"\n        });\n        setMarkedDates(newMarkedDates);\n      } catch (error) {\n        console.error(\"Error loading workouts for date:\", error);\n      }\n    });\n    return function loadWorkoutsForDate(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var formatDateForCalendar = function formatDateForCalendar(date) {\n    return date.toISOString().split(\"T\")[0];\n  };\n  var formatDateForDisplay = function formatDateForDisplay(date) {\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"long\",\n      month: \"long\",\n      day: \"numeric\"\n    });\n  };\n  var handleDateSelect = function handleDateSelect(date) {\n    var selectedDate = new Date(date.timestamp);\n    setSelectedDate(selectedDate);\n  };\n  var handleStartWorkout = function () {\n    var _ref4 = _asyncToGenerator(function* (scheduledWorkoutId) {\n      try {\n        setIsStartingWorkout(true);\n        var workoutId = yield startScheduledWorkout(scheduledWorkoutId);\n        if (workoutId) {\n          loadScheduledWorkouts();\n          navigation.navigate(\"Workout\", {\n            workoutId: workoutId\n          });\n        } else {\n          Alert.alert(\"Error\", \"Could not start the workout.\");\n        }\n      } catch (error) {\n        console.error(\"Error starting workout:\", error);\n        Alert.alert(\"Error\", \"Could not start the workout.\");\n      } finally {\n        setIsStartingWorkout(false);\n      }\n    });\n    return function handleStartWorkout(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var navigateToCreatePlan = function navigateToCreatePlan() {\n    navigation.navigate(\"CreateWorkoutPlan\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(RNCalendar, {\n      theme: {\n        backgroundColor: theme.colors.background,\n        calendarBackground: theme.colors.background,\n        textSectionTitleColor: theme.colors.textSecondary,\n        selectedDayBackgroundColor: theme.colors.primary,\n        selectedDayTextColor: theme.colors.white,\n        todayTextColor: theme.colors.primary,\n        dayTextColor: theme.colors.textPrimary,\n        textDisabledColor: theme.colors.textTertiary,\n        dotColor: theme.colors.primary,\n        selectedDotColor: theme.colors.white,\n        arrowColor: theme.colors.primary,\n        monthTextColor: theme.colors.textPrimary,\n        indicatorColor: theme.colors.primary\n      },\n      markedDates: markedDates,\n      onDayPress: handleDateSelect,\n      enableSwipeMonths: true\n    }), _jsx(View, {\n      style: styles.dateHeader,\n      children: _jsx(Text, {\n        style: styles.dateText,\n        children: formatDateForDisplay(selectedDate)\n      })\n    }), _jsx(ScrollView, {\n      style: styles.workoutsContainer,\n      children: isLoading ? _jsxs(View, {\n        style: styles.loadingContainer,\n        children: [_jsx(ActivityIndicator, {\n          size: \"large\",\n          color: theme.colors.primary\n        }), _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Loading workouts...\"\n        })]\n      }) : scheduledWorkouts.length > 0 ? scheduledWorkouts.map(function (workout) {\n        return _jsxs(View, {\n          style: styles.workoutCard,\n          children: [_jsxs(View, {\n            style: styles.workoutInfo,\n            children: [_jsx(Text, {\n              style: styles.workoutName,\n              children: workout.templateName\n            }), _jsxs(View, {\n              style: styles.workoutTime,\n              children: [_jsx(Clock, {\n                stroke: theme.colors.textSecondary,\n                size: 14\n              }), _jsx(Text, {\n                style: styles.timeText,\n                children: new Date(workout.date).toLocaleTimeString([], {\n                  hour: \"2-digit\",\n                  minute: \"2-digit\"\n                })\n              })]\n            }), workout.notes && _jsx(Text, {\n              style: styles.workoutNotes,\n              children: workout.notes\n            })]\n          }), workout.isCompleted ? _jsx(View, {\n            style: styles.completedBadge,\n            children: _jsx(Text, {\n              style: styles.completedText,\n              children: \"Completed\"\n            })\n          }) : _jsx(TouchableOpacity, {\n            style: styles.startButton,\n            onPress: function onPress() {\n              return handleStartWorkout(workout.id);\n            },\n            disabled: isStartingWorkout,\n            children: isStartingWorkout ? _jsx(ActivityIndicator, {\n              size: \"small\",\n              color: theme.colors.white\n            }) : _jsxs(_Fragment, {\n              children: [_jsx(Play, {\n                stroke: theme.colors.white,\n                size: 16,\n                fill: theme.colors.white\n              }), _jsx(Text, {\n                style: styles.startButtonText,\n                children: \"Start\"\n              })]\n            })\n          })]\n        }, workout.id);\n      }) : _jsxs(View, {\n        style: styles.emptyContainer,\n        children: [_jsx(Calendar, {\n          stroke: theme.colors.textSecondary,\n          size: 48\n        }), _jsx(Text, {\n          style: styles.emptyText,\n          children: \"No workouts scheduled for this day.\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.createPlanButton,\n          onPress: navigateToCreatePlan,\n          children: _jsx(Text, {\n            style: styles.createPlanButtonText,\n            children: \"Create Workout Plan\"\n          })\n        })]\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.fab,\n      onPress: navigateToCreatePlan,\n      children: _jsx(Plus, {\n        stroke: theme.colors.white,\n        size: 24\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  dateHeader: {\n    backgroundColor: theme.colors.surface,\n    paddingVertical: theme.spacing.md,\n    paddingHorizontal: theme.spacing.lg,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.surfaceLight\n  },\n  dateText: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.lg,\n    fontWeight: theme.typography.fontWeight.semibold\n  },\n  workoutsContainer: {\n    flex: 1,\n    padding: theme.spacing.md\n  },\n  workoutCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: theme.borderRadius.md,\n    padding: theme.spacing.md,\n    marginBottom: theme.spacing.md,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  workoutInfo: {\n    flex: 1\n  },\n  workoutName: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.md,\n    fontWeight: theme.typography.fontWeight.semibold,\n    marginBottom: 4\n  },\n  workoutTime: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 4\n  },\n  timeText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.sm,\n    marginLeft: theme.spacing.xs\n  },\n  workoutNotes: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.sm,\n    fontStyle: \"italic\"\n  },\n  startButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: theme.borderRadius.md,\n    paddingVertical: theme.spacing.sm,\n    paddingHorizontal: theme.spacing.md,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  startButtonText: {\n    color: theme.colors.white,\n    fontSize: theme.typography.fontSize.sm,\n    fontWeight: theme.typography.fontWeight.medium,\n    marginLeft: theme.spacing.xs\n  },\n  completedBadge: {\n    backgroundColor: theme.colors.success + \"33\",\n    borderRadius: theme.borderRadius.md,\n    paddingVertical: theme.spacing.sm,\n    paddingHorizontal: theme.spacing.md\n  },\n  completedText: {\n    color: theme.colors.success,\n    fontSize: theme.typography.fontSize.sm,\n    fontWeight: theme.typography.fontWeight.medium\n  },\n  emptyContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing.xl\n  },\n  emptyText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.md,\n    textAlign: \"center\",\n    marginTop: theme.spacing.md,\n    marginBottom: theme.spacing.lg\n  },\n  createPlanButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: theme.borderRadius.md,\n    paddingVertical: theme.spacing.sm,\n    paddingHorizontal: theme.spacing.lg\n  },\n  createPlanButtonText: {\n    color: theme.colors.white,\n    fontSize: theme.typography.fontSize.md,\n    fontWeight: theme.typography.fontWeight.medium\n  },\n  loadingContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing.xl\n  },\n  loadingText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.md,\n    marginTop: theme.spacing.md\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing.lg,\n    right: theme.spacing.lg,\n    backgroundColor: theme.colors.primary,\n    width: 56,\n    height: 56,\n    borderRadius: 28,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    elevation: 4,\n    shadowColor: theme.colors.black,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84\n  }\n});","map":{"version":3,"names":["_objectWithoutProperties","_defineProperty","_asyncToGenerator","_slicedToArray","_excluded","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","ScrollView","Alert","ActivityIndicator","theme","Calendar","RNCalendar","getScheduledWorkoutsForDate","getScheduledWorkoutsForDateRange","startScheduledWorkout","Clock","Play","Plus","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CalendarScreen","_ref","navigation","_useState","Date","_useState2","selectedDate","setSelectedDate","_useState3","_useState4","scheduledWorkouts","setScheduledWorkouts","_useState5","_useState6","markedDates","setMarkedDates","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isStartingWorkout","setIsStartingWorkout","loadScheduledWorkouts","loadWorkoutsForDate","_ref2","today","startOfMonth","getFullYear","getMonth","endOfMonth","setDate","getDate","workouts","marked","workout","dateString","formatDateForCalendar","date","dotColor","isCompleted","colors","success","primary","dots","color","selectedDateString","selected","selectedColor","error","console","alert","_ref3","newMarkedDates","_newMarkedDates$dateS","rest","_x","toISOString","split","formatDateForDisplay","toLocaleDateString","weekday","month","day","handleDateSelect","timestamp","handleStartWorkout","_ref4","scheduledWorkoutId","workoutId","navigate","_x2","navigateToCreatePlan","style","styles","container","children","backgroundColor","background","calendarBackground","textSectionTitleColor","textSecondary","selectedDayBackgroundColor","selectedDayTextColor","white","todayTextColor","dayTextColor","textPrimary","textDisabledColor","textTertiary","selectedDotColor","arrowColor","monthTextColor","indicatorColor","onDayPress","enableSwipeMonths","dateHeader","dateText","workoutsContainer","loadingContainer","size","loadingText","map","workoutCard","workoutInfo","workoutName","templateName","workoutTime","stroke","timeText","toLocaleTimeString","hour","minute","notes","workoutNotes","completedBadge","completedText","startButton","onPress","id","disabled","fill","startButtonText","emptyContainer","emptyText","createPlanButton","createPlanButtonText","fab","create","flex","surface","paddingVertical","spacing","md","paddingHorizontal","lg","borderBottomWidth","borderBottomColor","surfaceLight","fontSize","typography","fontWeight","semibold","padding","borderRadius","marginBottom","flexDirection","justifyContent","alignItems","sm","marginLeft","xs","fontStyle","medium","xl","textAlign","marginTop","position","bottom","right","width","height","elevation","shadowColor","black","shadowOffset","shadowOpacity","shadowRadius"],"sources":["/workspaces/Mygymapp/screens/CalendarScreen.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, Alert, ActivityIndicator } from \"react-native\"\nimport { theme } from \"../theme\"\nimport { Calendar as RNCalendar, type DateData } from \"react-native-calendars\"\nimport {\n  getScheduledWorkoutsForDate,\n  getScheduledWorkoutsForDateRange,\n  startScheduledWorkout,\n} from \"../services/planningService\"\nimport type { ScheduledWorkout } from \"../models/WorkoutPlan\"\nimport { Calendar, Clock, Play, Plus } from \"lucide-react-native\"\n\nexport default function CalendarScreen({ navigation }: any) {\n  const [selectedDate, setSelectedDate] = useState(new Date())\n  const [scheduledWorkouts, setScheduledWorkouts] = useState<ScheduledWorkout[]>([])\n  const [markedDates, setMarkedDates] = useState<any>({})\n  const [isLoading, setIsLoading] = useState(false)\n  const [isStartingWorkout, setIsStartingWorkout] = useState(false)\n\n  useEffect(() => {\n    loadScheduledWorkouts()\n  }, [])\n\n  useEffect(() => {\n    loadWorkoutsForDate(selectedDate)\n  }, [selectedDate])\n\n  const loadScheduledWorkouts = async () => {\n    setIsLoading(true)\n    try {\n      // Get date range for current month\n      const today = new Date()\n      const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1)\n      const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0)\n\n      // Add buffer days for previous and next month\n      startOfMonth.setDate(startOfMonth.getDate() - 7)\n      endOfMonth.setDate(endOfMonth.getDate() + 7)\n\n      const workouts = await getScheduledWorkoutsForDateRange(startOfMonth, endOfMonth)\n\n      // Create marked dates object for calendar\n      const marked: any = {}\n\n      workouts.forEach((workout) => {\n        const dateString = formatDateForCalendar(new Date(workout.date))\n\n        if (!marked[dateString]) {\n          marked[dateString] = {\n            marked: true,\n            dotColor: workout.isCompleted ? theme.colors.success : theme.colors.primary,\n          }\n        } else {\n          // If there are multiple workouts on the same day\n          marked[dateString].dots = [{ color: workout.isCompleted ? theme.colors.success : theme.colors.primary }]\n        }\n      })\n\n      // Mark selected date\n      const selectedDateString = formatDateForCalendar(selectedDate)\n      marked[selectedDateString] = {\n        ...marked[selectedDateString],\n        selected: true,\n        selectedColor: theme.colors.primary + \"33\", // 20% opacity\n      }\n\n      setMarkedDates(marked)\n    } catch (error) {\n      console.error(\"Error loading scheduled workouts:\", error)\n      Alert.alert(\"Error\", \"Could not load scheduled workouts.\")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const loadWorkoutsForDate = async (date: Date) => {\n    try {\n      const workouts = await getScheduledWorkoutsForDate(date)\n      setScheduledWorkouts(workouts)\n\n      // Update marked dates to highlight selected date\n      const newMarkedDates = { ...markedDates }\n\n      // Remove selected state from all dates\n      Object.keys(newMarkedDates).forEach((dateString) => {\n        if (newMarkedDates[dateString].selected) {\n          const { selected, selectedColor, ...rest } = newMarkedDates[dateString]\n          newMarkedDates[dateString] = rest\n        }\n      })\n\n      // Mark new selected date\n      const selectedDateString = formatDateForCalendar(date)\n      newMarkedDates[selectedDateString] = {\n        ...newMarkedDates[selectedDateString],\n        selected: true,\n        selectedColor: theme.colors.primary + \"33\", // 20% opacity\n      }\n\n      setMarkedDates(newMarkedDates)\n    } catch (error) {\n      console.error(\"Error loading workouts for date:\", error)\n    }\n  }\n\n  const formatDateForCalendar = (date: Date): string => {\n    return date.toISOString().split(\"T\")[0]\n  }\n\n  const formatDateForDisplay = (date: Date): string => {\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"long\",\n      month: \"long\",\n      day: \"numeric\",\n    })\n  }\n\n  const handleDateSelect = (date: DateData) => {\n    const selectedDate = new Date(date.timestamp)\n    setSelectedDate(selectedDate)\n  }\n\n  const handleStartWorkout = async (scheduledWorkoutId: string) => {\n    try {\n      setIsStartingWorkout(true)\n      const workoutId = await startScheduledWorkout(scheduledWorkoutId)\n\n      if (workoutId) {\n        // Refresh the calendar data\n        loadScheduledWorkouts()\n\n        // Navigate to the workout screen\n        navigation.navigate(\"Workout\", { workoutId })\n      } else {\n        Alert.alert(\"Error\", \"Could not start the workout.\")\n      }\n    } catch (error) {\n      console.error(\"Error starting workout:\", error)\n      Alert.alert(\"Error\", \"Could not start the workout.\")\n    } finally {\n      setIsStartingWorkout(false)\n    }\n  }\n\n  const navigateToCreatePlan = () => {\n    navigation.navigate(\"CreateWorkoutPlan\")\n  }\n\n  return (\n    <View style={styles.container}>\n      {/* Calendar */}\n      <RNCalendar\n        theme={{\n          backgroundColor: theme.colors.background,\n          calendarBackground: theme.colors.background,\n          textSectionTitleColor: theme.colors.textSecondary,\n          selectedDayBackgroundColor: theme.colors.primary,\n          selectedDayTextColor: theme.colors.white,\n          todayTextColor: theme.colors.primary,\n          dayTextColor: theme.colors.textPrimary,\n          textDisabledColor: theme.colors.textTertiary,\n          dotColor: theme.colors.primary,\n          selectedDotColor: theme.colors.white,\n          arrowColor: theme.colors.primary,\n          monthTextColor: theme.colors.textPrimary,\n          indicatorColor: theme.colors.primary,\n        }}\n        markedDates={markedDates}\n        onDayPress={handleDateSelect}\n        enableSwipeMonths={true}\n      />\n\n      {/* Selected Date Header */}\n      <View style={styles.dateHeader}>\n        <Text style={styles.dateText}>{formatDateForDisplay(selectedDate)}</Text>\n      </View>\n\n      {/* Scheduled Workouts */}\n      <ScrollView style={styles.workoutsContainer}>\n        {isLoading ? (\n          <View style={styles.loadingContainer}>\n            <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n            <Text style={styles.loadingText}>Loading workouts...</Text>\n          </View>\n        ) : scheduledWorkouts.length > 0 ? (\n          scheduledWorkouts.map((workout) => (\n            <View key={workout.id} style={styles.workoutCard}>\n              <View style={styles.workoutInfo}>\n                <Text style={styles.workoutName}>{workout.templateName}</Text>\n                <View style={styles.workoutTime}>\n                  <Clock stroke={theme.colors.textSecondary} size={14} />\n                  <Text style={styles.timeText}>\n                    {new Date(workout.date).toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}\n                  </Text>\n                </View>\n                {workout.notes && <Text style={styles.workoutNotes}>{workout.notes}</Text>}\n              </View>\n\n              {workout.isCompleted ? (\n                <View style={styles.completedBadge}>\n                  <Text style={styles.completedText}>Completed</Text>\n                </View>\n              ) : (\n                <TouchableOpacity\n                  style={styles.startButton}\n                  onPress={() => handleStartWorkout(workout.id)}\n                  disabled={isStartingWorkout}\n                >\n                  {isStartingWorkout ? (\n                    <ActivityIndicator size=\"small\" color={theme.colors.white} />\n                  ) : (\n                    <>\n                      <Play stroke={theme.colors.white} size={16} fill={theme.colors.white} />\n                      <Text style={styles.startButtonText}>Start</Text>\n                    </>\n                  )}\n                </TouchableOpacity>\n              )}\n            </View>\n          ))\n        ) : (\n          <View style={styles.emptyContainer}>\n            <Calendar stroke={theme.colors.textSecondary} size={48} />\n            <Text style={styles.emptyText}>No workouts scheduled for this day.</Text>\n            <TouchableOpacity style={styles.createPlanButton} onPress={navigateToCreatePlan}>\n              <Text style={styles.createPlanButtonText}>Create Workout Plan</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n      </ScrollView>\n\n      {/* Add Workout Plan FAB */}\n      <TouchableOpacity style={styles.fab} onPress={navigateToCreatePlan}>\n        <Plus stroke={theme.colors.white} size={24} />\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  dateHeader: {\n    backgroundColor: theme.colors.surface,\n    paddingVertical: theme.spacing.md,\n    paddingHorizontal: theme.spacing.lg,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.surfaceLight,\n  },\n  dateText: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.lg,\n    fontWeight: theme.typography.fontWeight.semibold,\n  },\n  workoutsContainer: {\n    flex: 1,\n    padding: theme.spacing.md,\n  },\n  workoutCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: theme.borderRadius.md,\n    padding: theme.spacing.md,\n    marginBottom: theme.spacing.md,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  workoutInfo: {\n    flex: 1,\n  },\n  workoutName: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.md,\n    fontWeight: theme.typography.fontWeight.semibold,\n    marginBottom: 4,\n  },\n  workoutTime: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 4,\n  },\n  timeText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.sm,\n    marginLeft: theme.spacing.xs,\n  },\n  workoutNotes: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.sm,\n    fontStyle: \"italic\",\n  },\n  startButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: theme.borderRadius.md,\n    paddingVertical: theme.spacing.sm,\n    paddingHorizontal: theme.spacing.md,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  startButtonText: {\n    color: theme.colors.white,\n    fontSize: theme.typography.fontSize.sm,\n    fontWeight: theme.typography.fontWeight.medium,\n    marginLeft: theme.spacing.xs,\n  },\n  completedBadge: {\n    backgroundColor: theme.colors.success + \"33\", // 20% opacity\n    borderRadius: theme.borderRadius.md,\n    paddingVertical: theme.spacing.sm,\n    paddingHorizontal: theme.spacing.md,\n  },\n  completedText: {\n    color: theme.colors.success,\n    fontSize: theme.typography.fontSize.sm,\n    fontWeight: theme.typography.fontWeight.medium,\n  },\n  emptyContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing.xl,\n  },\n  emptyText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.md,\n    textAlign: \"center\",\n    marginTop: theme.spacing.md,\n    marginBottom: theme.spacing.lg,\n  },\n  createPlanButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: theme.borderRadius.md,\n    paddingVertical: theme.spacing.sm,\n    paddingHorizontal: theme.spacing.lg,\n  },\n  createPlanButtonText: {\n    color: theme.colors.white,\n    fontSize: theme.typography.fontSize.md,\n    fontWeight: theme.typography.fontWeight.medium,\n  },\n  loadingContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing.xl,\n  },\n  loadingText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.md,\n    marginTop: theme.spacing.md,\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing.lg,\n    right: theme.spacing.lg,\n    backgroundColor: theme.colors.primary,\n    width: 56,\n    height: 56,\n    borderRadius: 28,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    elevation: 4,\n    shadowColor: theme.colors.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n})\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}