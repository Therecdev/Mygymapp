{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nvar JOURNAL_STORAGE_KEY = \"journal_entries\";\nexport var getAllJournalEntries = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var entriesJson = yield AsyncStorage.getItem(JOURNAL_STORAGE_KEY);\n      return entriesJson ? JSON.parse(entriesJson) : [];\n    } catch (error) {\n      console.error(\"Error retrieving journal entries:\", error);\n      return [];\n    }\n  });\n  return function getAllJournalEntries() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getRecentJournalEntries = function () {\n  var _ref2 = _asyncToGenerator(function* (limit) {\n    var entries = yield getAllJournalEntries();\n    return entries.sort(function (a, b) {\n      return new Date(b.date).getTime() - new Date(a.date).getTime();\n    }).slice(0, limit);\n  });\n  return function getRecentJournalEntries(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getJournalEntryById = function () {\n  var _ref3 = _asyncToGenerator(function* (id) {\n    var entries = yield getAllJournalEntries();\n    return entries.find(function (entry) {\n      return entry.id === id;\n    }) || null;\n  });\n  return function getJournalEntryById(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getJournalEntriesByWorkoutId = function () {\n  var _ref4 = _asyncToGenerator(function* (workoutId) {\n    var entries = yield getAllJournalEntries();\n    return entries.filter(function (entry) {\n      return entry.workoutId === workoutId;\n    });\n  });\n  return function getJournalEntriesByWorkoutId(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var saveJournalEntry = function () {\n  var _ref5 = _asyncToGenerator(function* (entry) {\n    try {\n      var entries = yield getAllJournalEntries();\n      if (!entry.id) {\n        entry.id = uuidv4();\n      }\n      var existingIndex = entries.findIndex(function (e) {\n        return e.id === entry.id;\n      });\n      if (existingIndex >= 0) {\n        entries[existingIndex] = entry;\n      } else {\n        entries.push(entry);\n      }\n      yield AsyncStorage.setItem(JOURNAL_STORAGE_KEY, JSON.stringify(entries));\n      return entry;\n    } catch (error) {\n      console.error(\"Error saving journal entry:\", error);\n      throw error;\n    }\n  });\n  return function saveJournalEntry(_x4) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var deleteJournalEntry = function () {\n  var _ref6 = _asyncToGenerator(function* (id) {\n    try {\n      var entries = yield getAllJournalEntries();\n      var filteredEntries = entries.filter(function (entry) {\n        return entry.id !== id;\n      });\n      yield AsyncStorage.setItem(JOURNAL_STORAGE_KEY, JSON.stringify(filteredEntries));\n      return true;\n    } catch (error) {\n      console.error(\"Error deleting journal entry:\", error);\n      return false;\n    }\n  });\n  return function deleteJournalEntry(_x5) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var searchJournalEntries = function () {\n  var _ref7 = _asyncToGenerator(function* (searchTerm) {\n    var entries = yield getAllJournalEntries();\n    var term = searchTerm.toLowerCase();\n    return entries.filter(function (entry) {\n      return entry.content.toLowerCase().includes(term) || entry.tags.some(function (tag) {\n        return tag.toLowerCase().includes(term);\n      });\n    });\n  });\n  return function searchJournalEntries(_x6) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var getJournalEntriesByTag = function () {\n  var _ref8 = _asyncToGenerator(function* (tag) {\n    var entries = yield getAllJournalEntries();\n    return entries.filter(function (entry) {\n      return entry.tags.includes(tag);\n    });\n  });\n  return function getJournalEntriesByTag(_x7) {\n    return _ref8.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["AsyncStorage","v4","uuidv4","JOURNAL_STORAGE_KEY","getAllJournalEntries","_ref","_asyncToGenerator","entriesJson","getItem","JSON","parse","error","console","apply","arguments","getRecentJournalEntries","_ref2","limit","entries","sort","a","b","Date","date","getTime","slice","_x","getJournalEntryById","_ref3","id","find","entry","_x2","getJournalEntriesByWorkoutId","_ref4","workoutId","filter","_x3","saveJournalEntry","_ref5","existingIndex","findIndex","e","push","setItem","stringify","_x4","deleteJournalEntry","_ref6","filteredEntries","_x5","searchJournalEntries","_ref7","searchTerm","term","toLowerCase","content","includes","tags","some","tag","_x6","getJournalEntriesByTag","_ref8","_x7"],"sources":["/workspaces/Mygymapp/services/journalService.ts"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport type { JournalEntry, MoodTag } from \"../models/JournalEntry\"\n\n// Keys for AsyncStorage\nconst JOURNAL_STORAGE_KEY = \"journal_entries\"\n\n// Get all journal entries\nexport const getAllJournalEntries = async (): Promise<JournalEntry[]> => {\n  try {\n    const entriesJson = await AsyncStorage.getItem(JOURNAL_STORAGE_KEY)\n    return entriesJson ? JSON.parse(entriesJson) : []\n  } catch (error) {\n    console.error(\"Error retrieving journal entries:\", error)\n    return []\n  }\n}\n\n// Get recent journal entries\nexport const getRecentJournalEntries = async (limit: number): Promise<JournalEntry[]> => {\n  const entries = await getAllJournalEntries()\n  return entries.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()).slice(0, limit)\n}\n\n// Get a journal entry by ID\nexport const getJournalEntryById = async (id: string): Promise<JournalEntry | null> => {\n  const entries = await getAllJournalEntries()\n  return entries.find((entry) => entry.id === id) || null\n}\n\n// Get journal entries by workout ID\nexport const getJournalEntriesByWorkoutId = async (workoutId: string): Promise<JournalEntry[]> => {\n  const entries = await getAllJournalEntries()\n  return entries.filter((entry) => entry.workoutId === workoutId)\n}\n\n// Save a journal entry\nexport const saveJournalEntry = async (entry: JournalEntry): Promise<JournalEntry> => {\n  try {\n    const entries = await getAllJournalEntries()\n\n    // If entry has no ID, create a new one\n    if (!entry.id) {\n      entry.id = uuidv4()\n    }\n\n    // Find if entry already exists to update or add new\n    const existingIndex = entries.findIndex((e) => e.id === entry.id)\n\n    if (existingIndex >= 0) {\n      entries[existingIndex] = entry\n    } else {\n      entries.push(entry)\n    }\n\n    await AsyncStorage.setItem(JOURNAL_STORAGE_KEY, JSON.stringify(entries))\n    return entry\n  } catch (error) {\n    console.error(\"Error saving journal entry:\", error)\n    throw error\n  }\n}\n\n// Delete a journal entry\nexport const deleteJournalEntry = async (id: string): Promise<boolean> => {\n  try {\n    const entries = await getAllJournalEntries()\n    const filteredEntries = entries.filter((entry) => entry.id !== id)\n    await AsyncStorage.setItem(JOURNAL_STORAGE_KEY, JSON.stringify(filteredEntries))\n    return true\n  } catch (error) {\n    console.error(\"Error deleting journal entry:\", error)\n    return false\n  }\n}\n\n// Search journal entries by content or tags\nexport const searchJournalEntries = async (searchTerm: string): Promise<JournalEntry[]> => {\n  const entries = await getAllJournalEntries()\n  const term = searchTerm.toLowerCase()\n  return entries.filter(\n    (entry) => entry.content.toLowerCase().includes(term) || entry.tags.some((tag) => tag.toLowerCase().includes(term)),\n  )\n}\n\n// Get journal entries by tag\nexport const getJournalEntriesByTag = async (tag: MoodTag): Promise<JournalEntry[]> => {\n  const entries = await getAllJournalEntries()\n  return entries.filter((entry) => entry.tags.includes(tag))\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}