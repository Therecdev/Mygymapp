{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onPress\"];\nimport React from 'react';\nimport ExpoClipboardPasteButton from './ExpoClipboardPasteButton';\nexport function ClipboardPasteButton(_ref) {\n  let {\n      onPress\n    } = _ref,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (!ExpoClipboardPasteButton) {\n    if (__DEV__) {\n      console.warn(\"'ApplePasteButton' is not available.\");\n    }\n    return null;\n  }\n  const onPastePressed = ({\n    nativeEvent\n  }) => {\n    onPress(nativeEvent);\n  };\n  return React.createElement(ExpoClipboardPasteButton, Object.assign({\n    onPastePressed: onPastePressed\n  }, restProps));\n}","map":{"version":3,"names":["React","ExpoClipboardPasteButton","ClipboardPasteButton","_ref","onPress","restProps","_objectWithoutPropertiesLoose","_excluded","__DEV__","console","warn","onPastePressed","nativeEvent","createElement","Object","assign"],"sources":["/Users/recep/Gym/node_modules/expo-clipboard/src/ClipboardPasteButton.tsx"],"sourcesContent":["import React from 'react';\nimport { NativeSyntheticEvent } from 'react-native';\n\nimport { ClipboardPasteButtonProps, PasteEventPayload } from './Clipboard.types';\nimport ExpoClipboardPasteButton from './ExpoClipboardPasteButton';\n\n// @needsAudit\n/**\n * This component displays the `UIPasteControl` button on your screen. This allows pasting from the clipboard without requesting permission from the user.\n *\n * You should only attempt to render this if [`Clipboard.isPasteButtonAvailable`](#ispastebuttonavailable)\n * is `true`. This component will render nothing if it is not available, and you will get\n * a warning in development mode (`__DEV__ === true`).\n *\n * The properties of this component extend from `View`; however, you should not attempt to set\n * `backgroundColor`, `color` or `borderRadius` with the `style` property. Apple restricts customisation of this view.\n * Instead, you should use the backgroundColor and foregroundColor properties to set the colors of the button, the cornerStyle property to change the border radius,\n * and the displayMode property to change the appearance of the icon and label. The word \"Paste\" is not editable and neither is the icon.\n *\n * Make sure to attach height and width via the style props as without these styles, the button will\n * not appear on the screen.\n *\n * @see [Apple Documentation](https://developer.apple.com/documentation/uikit/uipastecontrol) for more details.\n */\nexport function ClipboardPasteButton({ onPress, ...restProps }: ClipboardPasteButtonProps) {\n  if (!ExpoClipboardPasteButton) {\n    if (__DEV__) {\n      console.warn(\"'ApplePasteButton' is not available.\");\n    }\n    return null;\n  }\n\n  const onPastePressed = ({ nativeEvent }: NativeSyntheticEvent<PasteEventPayload>) => {\n    onPress(nativeEvent);\n  };\n\n  return <ExpoClipboardPasteButton onPastePressed={onPastePressed} {...restProps} />;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,OAAOC,wBAAwB,MAAM,4BAA4B;AAoBjE,OAAM,SAAUC,oBAAoBA,CAAAC,IAAA,EAAqD;EAAA,IAApD;MAAEC;IAAqB,CAA6B,GAAAD,IAAA;IAAtCE,SAAS,GAAAC,6BAAA,CAAAH,IAAA,EAAAI,SAAA;EAC1D,IAAI,CAACN,wBAAwB,EAAE;IAC7B,IAAIO,OAAO,EAAE;MACXC,OAAO,CAACC,IAAI,CAAC,sCAAsC,CAAC;;IAEtD,OAAO,IAAI;;EAGb,MAAMC,cAAc,GAAGA,CAAC;IAAEC;EAAW,CAA2C,KAAI;IAClFR,OAAO,CAACQ,WAAW,CAAC;EACtB,CAAC;EAED,OAAOZ,KAAA,CAAAa,aAAA,CAACZ,wBAAwB,EAAAa,MAAA,CAAAC,MAAA;IAACJ,cAAc,EAAEA;EAAc,GAAMN,SAAS,EAAI;AACpF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}