{"ast":null,"code":"\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { theme } from \"../theme\";\nimport { getAllWorkouts } from \"../services/workoutService\";\nimport { getMeasurementsByType } from \"../services/measurementService\";\nimport { LineChart, BarChart } from \"react-native-chart-kit\";\nimport { ChevronLeft, ChevronDown, ChevronUp, Calendar, Dumbbell, TrendingUp, Scale } from \"lucide-react-native\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function AdvancedAnalyticsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    workouts = _useState2[0],\n    setWorkouts = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    weightMeasurements = _useState4[0],\n    setWeightMeasurements = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState({\n      workoutFrequency: true,\n      volumeProgress: true,\n      weightProgress: true,\n      muscleBalance: true\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    expandedSections = _useState8[0],\n    setExpandedSections = _useState8[1];\n  useEffect(function () {\n    loadData();\n  }, []);\n  var loadData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      try {\n        var allWorkouts = yield getAllWorkouts();\n        var completedWorkouts = allWorkouts.filter(function (workout) {\n          return workout.isCompleted;\n        });\n        setWorkouts(completedWorkouts);\n        var weightData = yield getMeasurementsByType(\"weight\");\n        setWeightMeasurements(weightData);\n      } catch (error) {\n        console.error(\"Error loading analytics data:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function loadData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var toggleSection = function toggleSection(section) {\n    setExpandedSections(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, section, !prev[section]));\n    });\n  };\n  var getWorkoutFrequencyData = function getWorkoutFrequencyData() {\n    var now = new Date();\n    var sixWeeksAgo = new Date();\n    sixWeeksAgo.setDate(sixWeeksAgo.getDate() - 42);\n    var weeklyWorkouts = {};\n    for (var i = 0; i < 6; i++) {\n      var weekStart = new Date(sixWeeksAgo);\n      weekStart.setDate(weekStart.getDate() + i * 7);\n      var weekLabel = `W${i + 1}`;\n      weeklyWorkouts[weekLabel] = 0;\n    }\n    workouts.forEach(function (workout) {\n      var workoutDate = new Date(workout.date);\n      if (workoutDate >= sixWeeksAgo && workoutDate <= now) {\n        var daysSinceStart = Math.floor((workoutDate.getTime() - sixWeeksAgo.getTime()) / (1000 * 60 * 60 * 24));\n        var weekIndex = Math.floor(daysSinceStart / 7);\n        if (weekIndex >= 0 && weekIndex < 6) {\n          var _weekLabel = `W${weekIndex + 1}`;\n          weeklyWorkouts[_weekLabel] = (weeklyWorkouts[_weekLabel] || 0) + 1;\n        }\n      }\n    });\n    return {\n      labels: Object.keys(weeklyWorkouts),\n      datasets: [{\n        data: Object.values(weeklyWorkouts),\n        color: function color() {\n          return theme.colors.primary;\n        }\n      }]\n    };\n  };\n  var getVolumeProgressData = function getVolumeProgressData() {\n    var last10Workouts = _toConsumableArray(workouts).sort(function (a, b) {\n      return new Date(b.date).getTime() - new Date(a.date).getTime();\n    }).slice(0, 10).reverse();\n    var volumeData = last10Workouts.map(function (workout) {\n      var totalVolume = 0;\n      workout.exercises.forEach(function (exercise) {\n        exercise.sets.forEach(function (set) {\n          if (set.isCompleted) {\n            totalVolume += set.weight * set.reps;\n          }\n        });\n      });\n      return totalVolume;\n    });\n    var labels = last10Workouts.map(function (workout) {\n      var date = new Date(workout.date);\n      return `${date.getMonth() + 1}/${date.getDate()}`;\n    });\n    return {\n      labels: labels,\n      datasets: [{\n        data: volumeData,\n        color: function color() {\n          return theme.colors.primary;\n        },\n        strokeWidth: 2\n      }],\n      legend: [\"Total Volume\"]\n    };\n  };\n  var getWeightProgressData = function getWeightProgressData() {\n    if (weightMeasurements.length === 0) {\n      return null;\n    }\n    var last10Measurements = _toConsumableArray(weightMeasurements).sort(function (a, b) {\n      return new Date(b.date).getTime() - new Date(a.date).getTime();\n    }).slice(0, 10).reverse();\n    var labels = last10Measurements.map(function (measurement) {\n      var date = new Date(measurement.date);\n      return `${date.getMonth() + 1}/${date.getDate()}`;\n    });\n    var data = last10Measurements.map(function (measurement) {\n      return measurement.value;\n    });\n    return {\n      labels: labels,\n      datasets: [{\n        data: data,\n        color: function color() {\n          return theme.colors.info;\n        },\n        strokeWidth: 2\n      }],\n      legend: [\"Body Weight\"]\n    };\n  };\n  var getMuscleBalanceData = function getMuscleBalanceData() {\n    var muscleGroups = {\n      Chest: 0,\n      Back: 0,\n      Shoulders: 0,\n      Arms: 0,\n      Legs: 0,\n      Core: 0\n    };\n    workouts.forEach(function (workout) {\n      workout.exercises.forEach(function (exercise) {\n        var completedSets = exercise.sets.filter(function (set) {\n          return set.isCompleted;\n        }).length;\n        if (completedSets === 0) return;\n        var primaryMuscle = exercise.exercise.primaryMuscleGroups[0];\n        if ([\"chest\"].includes(primaryMuscle)) {\n          muscleGroups[\"Chest\"] += completedSets;\n        } else if ([\"back\", \"lats\", \"traps\"].includes(primaryMuscle)) {\n          muscleGroups[\"Back\"] += completedSets;\n        } else if ([\"shoulders\"].includes(primaryMuscle)) {\n          muscleGroups[\"Shoulders\"] += completedSets;\n        } else if ([\"biceps\", \"triceps\", \"forearms\"].includes(primaryMuscle)) {\n          muscleGroups[\"Arms\"] += completedSets;\n        } else if ([\"quadriceps\", \"hamstrings\", \"calves\", \"glutes\"].includes(primaryMuscle)) {\n          muscleGroups[\"Legs\"] += completedSets;\n        } else if ([\"abdominals\", \"obliques\"].includes(primaryMuscle)) {\n          muscleGroups[\"Core\"] += completedSets;\n        }\n      });\n    });\n    return {\n      labels: Object.keys(muscleGroups),\n      datasets: [{\n        data: Object.values(muscleGroups),\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          var colors = [theme.colors.primary, theme.colors.success, theme.colors.warning, theme.colors.info, theme.colors.error, theme.colors.primaryLight];\n          return colors[Math.floor(Math.random() * colors.length)];\n        }\n      }]\n    };\n  };\n  if (isLoading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Loading analytics data...\"\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(ChevronLeft, {\n          stroke: theme.colors.textPrimary,\n          size: 24\n        })\n      }), _jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Advanced Analytics\"\n      }), _jsx(View, {\n        style: {\n          width: 24\n        }\n      })]\n    }), _jsxs(ScrollView, {\n      style: styles.content,\n      children: [_jsxs(View, {\n        style: styles.section,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.sectionHeader,\n          onPress: function onPress() {\n            return toggleSection(\"workoutFrequency\");\n          },\n          children: [_jsxs(View, {\n            style: styles.sectionTitleContainer,\n            children: [_jsx(Calendar, {\n              stroke: theme.colors.primary,\n              size: 20\n            }), _jsx(Text, {\n              style: styles.sectionTitle,\n              children: \"Workout Frequency\"\n            })]\n          }), expandedSections.workoutFrequency ? _jsx(ChevronUp, {\n            stroke: theme.colors.textSecondary,\n            size: 20\n          }) : _jsx(ChevronDown, {\n            stroke: theme.colors.textSecondary,\n            size: 20\n          })]\n        }), expandedSections.workoutFrequency && _jsx(View, {\n          style: styles.chartContainer,\n          children: workouts.length > 0 ? _jsxs(_Fragment, {\n            children: [_jsx(Text, {\n              style: styles.chartDescription,\n              children: \"Workouts per week over the last 6 weeks\"\n            }), _jsx(BarChart, {\n              data: getWorkoutFrequencyData(),\n              width: 350,\n              height: 220,\n              chartConfig: {\n                backgroundColor: theme.colors.surface,\n                backgroundGradientFrom: theme.colors.surface,\n                backgroundGradientTo: theme.colors.surface,\n                decimalPlaces: 0,\n                color: function color() {\n                  var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return theme.colors.primary;\n                },\n                labelColor: function labelColor() {\n                  var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return theme.colors.textSecondary;\n                },\n                style: {\n                  borderRadius: 16\n                },\n                barPercentage: 0.7\n              },\n              style: styles.chart,\n              showValuesOnTopOfBars: true\n            })]\n          }) : _jsx(Text, {\n            style: styles.noDataText,\n            children: \"No workout data available. Complete workouts to see your frequency.\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.section,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.sectionHeader,\n          onPress: function onPress() {\n            return toggleSection(\"volumeProgress\");\n          },\n          children: [_jsxs(View, {\n            style: styles.sectionTitleContainer,\n            children: [_jsx(Dumbbell, {\n              stroke: theme.colors.primary,\n              size: 20\n            }), _jsx(Text, {\n              style: styles.sectionTitle,\n              children: \"Volume Progress\"\n            })]\n          }), expandedSections.volumeProgress ? _jsx(ChevronUp, {\n            stroke: theme.colors.textSecondary,\n            size: 20\n          }) : _jsx(ChevronDown, {\n            stroke: theme.colors.textSecondary,\n            size: 20\n          })]\n        }), expandedSections.volumeProgress && _jsx(View, {\n          style: styles.chartContainer,\n          children: workouts.length > 1 ? _jsxs(_Fragment, {\n            children: [_jsx(Text, {\n              style: styles.chartDescription,\n              children: \"Total workout volume over your last 10 workouts\"\n            }), _jsx(LineChart, {\n              data: getVolumeProgressData(),\n              width: 350,\n              height: 220,\n              chartConfig: {\n                backgroundColor: theme.colors.surface,\n                backgroundGradientFrom: theme.colors.surface,\n                backgroundGradientTo: theme.colors.surface,\n                decimalPlaces: 0,\n                color: function color() {\n                  var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return theme.colors.primary;\n                },\n                labelColor: function labelColor() {\n                  var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return theme.colors.textSecondary;\n                },\n                style: {\n                  borderRadius: 16\n                },\n                propsForDots: {\n                  r: \"6\",\n                  strokeWidth: \"2\",\n                  stroke: theme.colors.primary\n                }\n              },\n              bezier: true,\n              style: styles.chart\n            })]\n          }) : _jsx(Text, {\n            style: styles.noDataText,\n            children: \"Not enough workout data. Complete at least 2 workouts to see volume progress.\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.section,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.sectionHeader,\n          onPress: function onPress() {\n            return toggleSection(\"weightProgress\");\n          },\n          children: [_jsxs(View, {\n            style: styles.sectionTitleContainer,\n            children: [_jsx(Scale, {\n              stroke: theme.colors.primary,\n              size: 20\n            }), _jsx(Text, {\n              style: styles.sectionTitle,\n              children: \"Weight Progress\"\n            })]\n          }), expandedSections.weightProgress ? _jsx(ChevronUp, {\n            stroke: theme.colors.textSecondary,\n            size: 20\n          }) : _jsx(ChevronDown, {\n            stroke: theme.colors.textSecondary,\n            size: 20\n          })]\n        }), expandedSections.weightProgress && _jsx(View, {\n          style: styles.chartContainer,\n          children: weightMeasurements.length > 1 ? _jsxs(_Fragment, {\n            children: [_jsx(Text, {\n              style: styles.chartDescription,\n              children: \"Body weight measurements over time\"\n            }), _jsx(LineChart, {\n              data: getWeightProgressData(),\n              width: 350,\n              height: 220,\n              chartConfig: {\n                backgroundColor: theme.colors.surface,\n                backgroundGradientFrom: theme.colors.surface,\n                backgroundGradientTo: theme.colors.surface,\n                decimalPlaces: 1,\n                color: function color() {\n                  var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return theme.colors.info;\n                },\n                labelColor: function labelColor() {\n                  var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return theme.colors.textSecondary;\n                },\n                style: {\n                  borderRadius: 16\n                },\n                propsForDots: {\n                  r: \"6\",\n                  strokeWidth: \"2\",\n                  stroke: theme.colors.info\n                }\n              },\n              bezier: true,\n              style: styles.chart\n            })]\n          }) : _jsx(Text, {\n            style: styles.noDataText,\n            children: \"Not enough weight measurements. Add at least 2 weight measurements to see progress.\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.section,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.sectionHeader,\n          onPress: function onPress() {\n            return toggleSection(\"muscleBalance\");\n          },\n          children: [_jsxs(View, {\n            style: styles.sectionTitleContainer,\n            children: [_jsx(TrendingUp, {\n              stroke: theme.colors.primary,\n              size: 20\n            }), _jsx(Text, {\n              style: styles.sectionTitle,\n              children: \"Muscle Group Balance\"\n            })]\n          }), expandedSections.muscleBalance ? _jsx(ChevronUp, {\n            stroke: theme.colors.textSecondary,\n            size: 20\n          }) : _jsx(ChevronDown, {\n            stroke: theme.colors.textSecondary,\n            size: 20\n          })]\n        }), expandedSections.muscleBalance && _jsx(View, {\n          style: styles.chartContainer,\n          children: workouts.length > 0 ? _jsxs(_Fragment, {\n            children: [_jsx(Text, {\n              style: styles.chartDescription,\n              children: \"Distribution of sets across muscle groups\"\n            }), _jsx(BarChart, {\n              data: getMuscleBalanceData(),\n              width: 350,\n              height: 220,\n              chartConfig: {\n                backgroundColor: theme.colors.surface,\n                backgroundGradientFrom: theme.colors.surface,\n                backgroundGradientTo: theme.colors.surface,\n                decimalPlaces: 0,\n                color: function color() {\n                  var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return theme.colors.primary;\n                },\n                labelColor: function labelColor() {\n                  var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return theme.colors.textSecondary;\n                },\n                style: {\n                  borderRadius: 16\n                },\n                barPercentage: 0.7\n              },\n              style: styles.chart,\n              showValuesOnTopOfBars: true\n            })]\n          }) : _jsx(Text, {\n            style: styles.noDataText,\n            children: \"No workout data available. Complete workouts to see muscle group balance.\"\n          })\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: theme.spacing.md,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.surface\n  },\n  headerTitle: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.lg,\n    fontWeight: theme.typography.fontWeight.semibold\n  },\n  backButton: {\n    padding: theme.spacing.xs,\n    width: 40,\n    alignItems: \"center\"\n  },\n  content: {\n    flex: 1\n  },\n  section: {\n    backgroundColor: theme.colors.surface,\n    margin: theme.spacing.md,\n    marginBottom: theme.spacing.sm,\n    borderRadius: theme.borderRadius.md,\n    overflow: \"hidden\"\n  },\n  sectionHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: theme.spacing.md,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.surfaceLight\n  },\n  sectionTitleContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  sectionTitle: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.md,\n    fontWeight: theme.typography.fontWeight.semibold,\n    marginLeft: theme.spacing.sm\n  },\n  chartContainer: {\n    padding: theme.spacing.md,\n    alignItems: \"center\"\n  },\n  chartDescription: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.sm,\n    marginBottom: theme.spacing.md,\n    textAlign: \"center\"\n  },\n  chart: {\n    marginVertical: theme.spacing.md,\n    borderRadius: theme.borderRadius.md\n  },\n  noDataText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.md,\n    textAlign: \"center\",\n    padding: theme.spacing.md\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  loadingText: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.md,\n    marginTop: theme.spacing.md\n  }\n});","map":{"version":3,"names":["_toConsumableArray","_defineProperty","_asyncToGenerator","_slicedToArray","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","ActivityIndicator","theme","getAllWorkouts","getMeasurementsByType","LineChart","BarChart","ChevronLeft","ChevronDown","ChevronUp","Calendar","Dumbbell","TrendingUp","Scale","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdvancedAnalyticsScreen","_ref","navigation","_useState","_useState2","workouts","setWorkouts","_useState3","_useState4","weightMeasurements","setWeightMeasurements","_useState5","_useState6","isLoading","setIsLoading","_useState7","workoutFrequency","volumeProgress","weightProgress","muscleBalance","_useState8","expandedSections","setExpandedSections","loadData","_ref2","allWorkouts","completedWorkouts","workout","isCompleted","weightData","error","console","toggleSection","section","prev","getWorkoutFrequencyData","now","Date","sixWeeksAgo","setDate","getDate","weeklyWorkouts","i","weekStart","weekLabel","workoutDate","date","daysSinceStart","Math","floor","getTime","weekIndex","labels","datasets","data","values","color","colors","primary","getVolumeProgressData","last10Workouts","sort","a","b","slice","reverse","volumeData","map","totalVolume","exercises","exercise","sets","set","weight","reps","getMonth","strokeWidth","legend","getWeightProgressData","last10Measurements","measurement","value","info","getMuscleBalanceData","muscleGroups","Chest","Back","Shoulders","Arms","Legs","Core","completedSets","primaryMuscle","primaryMuscleGroups","includes","opacity","undefined","success","warning","primaryLight","random","style","styles","loadingContainer","children","size","loadingText","container","header","backButton","onPress","goBack","stroke","textPrimary","headerTitle","width","content","sectionHeader","sectionTitleContainer","sectionTitle","textSecondary","chartContainer","chartDescription","height","chartConfig","backgroundColor","surface","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","borderRadius","barPercentage","chart","showValuesOnTopOfBars","noDataText","propsForDots","bezier","create","flex","background","flexDirection","justifyContent","alignItems","padding","spacing","md","borderBottomWidth","borderBottomColor","fontSize","typography","lg","fontWeight","semibold","xs","margin","marginBottom","sm","overflow","surfaceLight","marginLeft","textAlign","marginVertical","marginTop"],"sources":["/workspaces/Mygymapp/screens/AdvancedAnalyticsScreen.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, ActivityIndicator } from \"react-native\"\nimport { theme } from \"../theme\"\nimport { getAllWorkouts } from \"../services/workoutService\"\nimport { getMeasurementsByType } from \"../services/measurementService\"\nimport type { Workout } from \"../models/Workout\"\nimport type { Measurement } from \"../models/Measurement\"\nimport { LineChart, BarChart } from \"react-native-chart-kit\"\nimport { ChevronLeft, ChevronDown, ChevronUp, Calendar, Dumbbell, TrendingUp, Scale } from \"lucide-react-native\"\n\nexport default function AdvancedAnalyticsScreen({ navigation }: any) {\n  const [workouts, setWorkouts] = useState<Workout[]>([])\n  const [weightMeasurements, setWeightMeasurements] = useState<Measurement[]>([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [expandedSections, setExpandedSections] = useState({\n    workoutFrequency: true,\n    volumeProgress: true,\n    weightProgress: true,\n    muscleBalance: true,\n  })\n\n  useEffect(() => {\n    loadData()\n  }, [])\n\n  const loadData = async () => {\n    setIsLoading(true)\n    try {\n      // Load workouts\n      const allWorkouts = await getAllWorkouts()\n      const completedWorkouts = allWorkouts.filter((workout) => workout.isCompleted)\n      setWorkouts(completedWorkouts)\n\n      // Load weight measurements\n      const weightData = await getMeasurementsByType(\"weight\")\n      setWeightMeasurements(weightData)\n    } catch (error) {\n      console.error(\"Error loading analytics data:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const toggleSection = (section: string) => {\n    setExpandedSections((prev) => ({\n      ...prev,\n      [section]: !prev[section],\n    }))\n  }\n\n  // Calculate workout frequency by week\n  const getWorkoutFrequencyData = () => {\n    // Group workouts by week\n    const now = new Date()\n    const sixWeeksAgo = new Date()\n    sixWeeksAgo.setDate(sixWeeksAgo.getDate() - 42) // 6 weeks ago\n\n    const weeklyWorkouts: Record<string, number> = {}\n\n    // Initialize all weeks with 0\n    for (let i = 0; i < 6; i++) {\n      const weekStart = new Date(sixWeeksAgo)\n      weekStart.setDate(weekStart.getDate() + i * 7)\n      const weekLabel = `W${i + 1}`\n      weeklyWorkouts[weekLabel] = 0\n    }\n\n    // Count workouts per week\n    workouts.forEach((workout) => {\n      const workoutDate = new Date(workout.date)\n      if (workoutDate >= sixWeeksAgo && workoutDate <= now) {\n        // Calculate which week this workout belongs to\n        const daysSinceStart = Math.floor((workoutDate.getTime() - sixWeeksAgo.getTime()) / (1000 * 60 * 60 * 24))\n        const weekIndex = Math.floor(daysSinceStart / 7)\n        if (weekIndex >= 0 && weekIndex < 6) {\n          const weekLabel = `W${weekIndex + 1}`\n          weeklyWorkouts[weekLabel] = (weeklyWorkouts[weekLabel] || 0) + 1\n        }\n      }\n    })\n\n    return {\n      labels: Object.keys(weeklyWorkouts),\n      datasets: [\n        {\n          data: Object.values(weeklyWorkouts),\n          color: () => theme.colors.primary,\n        },\n      ],\n    }\n  }\n\n  // Calculate volume progress for a specific exercise\n  const getVolumeProgressData = () => {\n    // For simplicity, we'll track total workout volume over time\n    const last10Workouts = [...workouts]\n      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n      .slice(0, 10)\n      .reverse()\n\n    const volumeData = last10Workouts.map((workout) => {\n      // Calculate total volume (weight * reps) for the workout\n      let totalVolume = 0\n      workout.exercises.forEach((exercise) => {\n        exercise.sets.forEach((set) => {\n          if (set.isCompleted) {\n            totalVolume += set.weight * set.reps\n          }\n        })\n      })\n      return totalVolume\n    })\n\n    const labels = last10Workouts.map((workout) => {\n      const date = new Date(workout.date)\n      return `${date.getMonth() + 1}/${date.getDate()}`\n    })\n\n    return {\n      labels,\n      datasets: [\n        {\n          data: volumeData,\n          color: () => theme.colors.primary,\n          strokeWidth: 2,\n        },\n      ],\n      legend: [\"Total Volume\"],\n    }\n  }\n\n  // Calculate weight progress\n  const getWeightProgressData = () => {\n    if (weightMeasurements.length === 0) {\n      return null\n    }\n\n    const last10Measurements = [...weightMeasurements]\n      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n      .slice(0, 10)\n      .reverse()\n\n    const labels = last10Measurements.map((measurement) => {\n      const date = new Date(measurement.date)\n      return `${date.getMonth() + 1}/${date.getDate()}`\n    })\n\n    const data = last10Measurements.map((measurement) => measurement.value)\n\n    return {\n      labels,\n      datasets: [\n        {\n          data,\n          color: () => theme.colors.info,\n          strokeWidth: 2,\n        },\n      ],\n      legend: [\"Body Weight\"],\n    }\n  }\n\n  // Calculate muscle group balance\n  const getMuscleBalanceData = () => {\n    const muscleGroups: Record<string, number> = {\n      Chest: 0,\n      Back: 0,\n      Shoulders: 0,\n      Arms: 0,\n      Legs: 0,\n      Core: 0,\n    }\n\n    // Count sets per muscle group\n    workouts.forEach((workout) => {\n      workout.exercises.forEach((exercise) => {\n        const completedSets = exercise.sets.filter((set) => set.isCompleted).length\n\n        if (completedSets === 0) return\n\n        // Map exercise muscle groups to our simplified categories\n        const primaryMuscle = exercise.exercise.primaryMuscleGroups[0]\n\n        if ([\"chest\"].includes(primaryMuscle)) {\n          muscleGroups[\"Chest\"] += completedSets\n        } else if ([\"back\", \"lats\", \"traps\"].includes(primaryMuscle)) {\n          muscleGroups[\"Back\"] += completedSets\n        } else if ([\"shoulders\"].includes(primaryMuscle)) {\n          muscleGroups[\"Shoulders\"] += completedSets\n        } else if ([\"biceps\", \"triceps\", \"forearms\"].includes(primaryMuscle)) {\n          muscleGroups[\"Arms\"] += completedSets\n        } else if ([\"quadriceps\", \"hamstrings\", \"calves\", \"glutes\"].includes(primaryMuscle)) {\n          muscleGroups[\"Legs\"] += completedSets\n        } else if ([\"abdominals\", \"obliques\"].includes(primaryMuscle)) {\n          muscleGroups[\"Core\"] += completedSets\n        }\n      })\n    })\n\n    return {\n      labels: Object.keys(muscleGroups),\n      datasets: [\n        {\n          data: Object.values(muscleGroups),\n          color: (opacity = 1) => {\n            // Generate different colors for each bar\n            const colors = [\n              theme.colors.primary,\n              theme.colors.success,\n              theme.colors.warning,\n              theme.colors.info,\n              theme.colors.error,\n              theme.colors.primaryLight,\n            ]\n            return colors[Math.floor(Math.random() * colors.length)]\n          },\n        },\n      ],\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        <Text style={styles.loadingText}>Loading analytics data...</Text>\n      </View>\n    )\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n          <ChevronLeft stroke={theme.colors.textPrimary} size={24} />\n        </TouchableOpacity>\n        <Text style={styles.headerTitle}>Advanced Analytics</Text>\n        <View style={{ width: 24 }} />\n      </View>\n\n      <ScrollView style={styles.content}>\n        {/* Workout Frequency */}\n        <View style={styles.section}>\n          <TouchableOpacity style={styles.sectionHeader} onPress={() => toggleSection(\"workoutFrequency\")}>\n            <View style={styles.sectionTitleContainer}>\n              <Calendar stroke={theme.colors.primary} size={20} />\n              <Text style={styles.sectionTitle}>Workout Frequency</Text>\n            </View>\n            {expandedSections.workoutFrequency ? (\n              <ChevronUp stroke={theme.colors.textSecondary} size={20} />\n            ) : (\n              <ChevronDown stroke={theme.colors.textSecondary} size={20} />\n            )}\n          </TouchableOpacity>\n\n          {expandedSections.workoutFrequency && (\n            <View style={styles.chartContainer}>\n              {workouts.length > 0 ? (\n                <>\n                  <Text style={styles.chartDescription}>Workouts per week over the last 6 weeks</Text>\n                  <BarChart\n                    data={getWorkoutFrequencyData()}\n                    width={350}\n                    height={220}\n                    chartConfig={{\n                      backgroundColor: theme.colors.surface,\n                      backgroundGradientFrom: theme.colors.surface,\n                      backgroundGradientTo: theme.colors.surface,\n                      decimalPlaces: 0,\n                      color: (opacity = 1) => theme.colors.primary,\n                      labelColor: (opacity = 1) => theme.colors.textSecondary,\n                      style: {\n                        borderRadius: 16,\n                      },\n                      barPercentage: 0.7,\n                    }}\n                    style={styles.chart}\n                    showValuesOnTopOfBars={true}\n                  />\n                </>\n              ) : (\n                <Text style={styles.noDataText}>\n                  No workout data available. Complete workouts to see your frequency.\n                </Text>\n              )}\n            </View>\n          )}\n        </View>\n\n        {/* Volume Progress */}\n        <View style={styles.section}>\n          <TouchableOpacity style={styles.sectionHeader} onPress={() => toggleSection(\"volumeProgress\")}>\n            <View style={styles.sectionTitleContainer}>\n              <Dumbbell stroke={theme.colors.primary} size={20} />\n              <Text style={styles.sectionTitle}>Volume Progress</Text>\n            </View>\n            {expandedSections.volumeProgress ? (\n              <ChevronUp stroke={theme.colors.textSecondary} size={20} />\n            ) : (\n              <ChevronDown stroke={theme.colors.textSecondary} size={20} />\n            )}\n          </TouchableOpacity>\n\n          {expandedSections.volumeProgress && (\n            <View style={styles.chartContainer}>\n              {workouts.length > 1 ? (\n                <>\n                  <Text style={styles.chartDescription}>Total workout volume over your last 10 workouts</Text>\n                  <LineChart\n                    data={getVolumeProgressData()}\n                    width={350}\n                    height={220}\n                    chartConfig={{\n                      backgroundColor: theme.colors.surface,\n                      backgroundGradientFrom: theme.colors.surface,\n                      backgroundGradientTo: theme.colors.surface,\n                      decimalPlaces: 0,\n                      color: (opacity = 1) => theme.colors.primary,\n                      labelColor: (opacity = 1) => theme.colors.textSecondary,\n                      style: {\n                        borderRadius: 16,\n                      },\n                      propsForDots: {\n                        r: \"6\",\n                        strokeWidth: \"2\",\n                        stroke: theme.colors.primary,\n                      },\n                    }}\n                    bezier\n                    style={styles.chart}\n                  />\n                </>\n              ) : (\n                <Text style={styles.noDataText}>\n                  Not enough workout data. Complete at least 2 workouts to see volume progress.\n                </Text>\n              )}\n            </View>\n          )}\n        </View>\n\n        {/* Weight Progress */}\n        <View style={styles.section}>\n          <TouchableOpacity style={styles.sectionHeader} onPress={() => toggleSection(\"weightProgress\")}>\n            <View style={styles.sectionTitleContainer}>\n              <Scale stroke={theme.colors.primary} size={20} />\n              <Text style={styles.sectionTitle}>Weight Progress</Text>\n            </View>\n            {expandedSections.weightProgress ? (\n              <ChevronUp stroke={theme.colors.textSecondary} size={20} />\n            ) : (\n              <ChevronDown stroke={theme.colors.textSecondary} size={20} />\n            )}\n          </TouchableOpacity>\n\n          {expandedSections.weightProgress && (\n            <View style={styles.chartContainer}>\n              {weightMeasurements.length > 1 ? (\n                <>\n                  <Text style={styles.chartDescription}>Body weight measurements over time</Text>\n                  <LineChart\n                    data={getWeightProgressData()!}\n                    width={350}\n                    height={220}\n                    chartConfig={{\n                      backgroundColor: theme.colors.surface,\n                      backgroundGradientFrom: theme.colors.surface,\n                      backgroundGradientTo: theme.colors.surface,\n                      decimalPlaces: 1,\n                      color: (opacity = 1) => theme.colors.info,\n                      labelColor: (opacity = 1) => theme.colors.textSecondary,\n                      style: {\n                        borderRadius: 16,\n                      },\n                      propsForDots: {\n                        r: \"6\",\n                        strokeWidth: \"2\",\n                        stroke: theme.colors.info,\n                      },\n                    }}\n                    bezier\n                    style={styles.chart}\n                  />\n                </>\n              ) : (\n                <Text style={styles.noDataText}>\n                  Not enough weight measurements. Add at least 2 weight measurements to see progress.\n                </Text>\n              )}\n            </View>\n          )}\n        </View>\n\n        {/* Muscle Balance */}\n        <View style={styles.section}>\n          <TouchableOpacity style={styles.sectionHeader} onPress={() => toggleSection(\"muscleBalance\")}>\n            <View style={styles.sectionTitleContainer}>\n              <TrendingUp stroke={theme.colors.primary} size={20} />\n              <Text style={styles.sectionTitle}>Muscle Group Balance</Text>\n            </View>\n            {expandedSections.muscleBalance ? (\n              <ChevronUp stroke={theme.colors.textSecondary} size={20} />\n            ) : (\n              <ChevronDown stroke={theme.colors.textSecondary} size={20} />\n            )}\n          </TouchableOpacity>\n\n          {expandedSections.muscleBalance && (\n            <View style={styles.chartContainer}>\n              {workouts.length > 0 ? (\n                <>\n                  <Text style={styles.chartDescription}>Distribution of sets across muscle groups</Text>\n                  <BarChart\n                    data={getMuscleBalanceData()}\n                    width={350}\n                    height={220}\n                    chartConfig={{\n                      backgroundColor: theme.colors.surface,\n                      backgroundGradientFrom: theme.colors.surface,\n                      backgroundGradientTo: theme.colors.surface,\n                      decimalPlaces: 0,\n                      color: (opacity = 1) => theme.colors.primary,\n                      labelColor: (opacity = 1) => theme.colors.textSecondary,\n                      style: {\n                        borderRadius: 16,\n                      },\n                      barPercentage: 0.7,\n                    }}\n                    style={styles.chart}\n                    showValuesOnTopOfBars={true}\n                  />\n                </>\n              ) : (\n                <Text style={styles.noDataText}>\n                  No workout data available. Complete workouts to see muscle group balance.\n                </Text>\n              )}\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: theme.spacing.md,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.surface,\n  },\n  headerTitle: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.lg,\n    fontWeight: theme.typography.fontWeight.semibold,\n  },\n  backButton: {\n    padding: theme.spacing.xs,\n    width: 40,\n    alignItems: \"center\",\n  },\n  content: {\n    flex: 1,\n  },\n  section: {\n    backgroundColor: theme.colors.surface,\n    margin: theme.spacing.md,\n    marginBottom: theme.spacing.sm,\n    borderRadius: theme.borderRadius.md,\n    overflow: \"hidden\",\n  },\n  sectionHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: theme.spacing.md,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.surfaceLight,\n  },\n  sectionTitleContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  sectionTitle: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.md,\n    fontWeight: theme.typography.fontWeight.semibold,\n    marginLeft: theme.spacing.sm,\n  },\n  chartContainer: {\n    padding: theme.spacing.md,\n    alignItems: \"center\",\n  },\n  chartDescription: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.sm,\n    marginBottom: theme.spacing.md,\n    textAlign: \"center\",\n  },\n  chart: {\n    marginVertical: theme.spacing.md,\n    borderRadius: theme.borderRadius.md,\n  },\n  noDataText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.md,\n    textAlign: \"center\",\n    padding: theme.spacing.md,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  loadingText: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.md,\n    marginTop: theme.spacing.md,\n  },\n})\n\n"],"mappings":"AAAA,YAAY;;AAAA,OAAAA,kBAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,cAAA;AAAA,SAAAC,QAAAC,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAJ,CAAA,OAAAG,MAAA,CAAAE,qBAAA,QAAAC,CAAA,GAAAH,MAAA,CAAAE,qBAAA,CAAAL,CAAA,GAAAC,CAAA,KAAAK,CAAA,GAAAA,CAAA,CAAAC,MAAA,WAAAN,CAAA,WAAAE,MAAA,CAAAK,wBAAA,CAAAR,CAAA,EAAAC,CAAA,EAAAQ,UAAA,OAAAP,CAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,CAAA,EAAAI,CAAA,YAAAJ,CAAA;AAAA,SAAAU,cAAAZ,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAY,SAAA,CAAAC,MAAA,EAAAb,CAAA,UAAAC,CAAA,WAAAW,SAAA,CAAAZ,CAAA,IAAAY,SAAA,CAAAZ,CAAA,QAAAA,CAAA,OAAAF,OAAA,CAAAI,MAAA,CAAAD,CAAA,OAAAa,OAAA,WAAAd,CAAA,IAAAL,eAAA,CAAAI,CAAA,EAAAC,CAAA,EAAAC,CAAA,CAAAD,CAAA,SAAAE,MAAA,CAAAa,yBAAA,GAAAb,MAAA,CAAAc,gBAAA,CAAAjB,CAAA,EAAAG,MAAA,CAAAa,yBAAA,CAAAd,CAAA,KAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,GAAAa,OAAA,WAAAd,CAAA,IAAAE,MAAA,CAAAe,cAAA,CAAAlB,CAAA,EAAAC,CAAA,EAAAE,MAAA,CAAAK,wBAAA,CAAAN,CAAA,EAAAD,CAAA,iBAAAD,CAAA;AAEZ,SAASmB,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,iBAAA;AAE3C,SAASC,KAAK;AACd,SAASC,cAAc;AACvB,SAASC,qBAAqB;AAG9B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,wBAAwB;AAC5D,SAASC,WAAW,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,KAAK,QAAQ,qBAAqB;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhH,eAAe,SAASC,uBAAuBA,CAAAC,IAAA,EAAsB;EAAA,IAAnBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC1D,IAAAC,SAAA,GAAgC7B,QAAQ,CAAY,EAAE,CAAC;IAAA8B,UAAA,GAAAnD,cAAA,CAAAkD,SAAA;IAAhDE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAoDjC,QAAQ,CAAgB,EAAE,CAAC;IAAAkC,UAAA,GAAAvD,cAAA,CAAAsD,UAAA;IAAxEE,kBAAkB,GAAAD,UAAA;IAAEE,qBAAqB,GAAAF,UAAA;EAChD,IAAAG,UAAA,GAAkCrC,QAAQ,CAAC,IAAI,CAAC;IAAAsC,UAAA,GAAA3D,cAAA,CAAA0D,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAAgDzC,QAAQ,CAAC;MACvD0C,gBAAgB,EAAE,IAAI;MACtBC,cAAc,EAAE,IAAI;MACpBC,cAAc,EAAE,IAAI;MACpBC,aAAa,EAAE;IACjB,CAAC,CAAC;IAAAC,UAAA,GAAAnE,cAAA,CAAA8D,UAAA;IALKM,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAO5C7C,SAAS,CAAC,YAAM;IACdgD,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,QAAQ;IAAA,IAAAC,KAAA,GAAAxE,iBAAA,CAAG,aAAY;MAC3B8D,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QAEF,IAAMW,WAAW,SAAS1C,cAAc,CAAC,CAAC;QAC1C,IAAM2C,iBAAiB,GAAGD,WAAW,CAAC/D,MAAM,CAAC,UAACiE,OAAO;UAAA,OAAKA,OAAO,CAACC,WAAW;QAAA,EAAC;QAC9EtB,WAAW,CAACoB,iBAAiB,CAAC;QAG9B,IAAMG,UAAU,SAAS7C,qBAAqB,CAAC,QAAQ,CAAC;QACxD0B,qBAAqB,CAACmB,UAAU,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,SAAS;QACRhB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAAA,gBAhBKS,QAAQA,CAAA;MAAA,OAAAC,KAAA,CAAA1D,KAAA,OAAAE,SAAA;IAAA;EAAA,GAgBb;EAED,IAAMgE,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,OAAe,EAAK;IACzCX,mBAAmB,CAAC,UAACY,IAAI;MAAA,OAAAnE,aAAA,CAAAA,aAAA,KACpBmE,IAAI,OAAAnF,eAAA,KACNkF,OAAO,EAAG,CAACC,IAAI,CAACD,OAAO,CAAC;IAAA,CACzB,CAAC;EACL,CAAC;EAGD,IAAME,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAA,EAAS;IAEpC,IAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,IAAMC,WAAW,GAAG,IAAID,IAAI,CAAC,CAAC;IAC9BC,WAAW,CAACC,OAAO,CAACD,WAAW,CAACE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IAE/C,IAAMC,cAAsC,GAAG,CAAC,CAAC;IAGjD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAMC,SAAS,GAAG,IAAIN,IAAI,CAACC,WAAW,CAAC;MACvCK,SAAS,CAACJ,OAAO,CAACI,SAAS,CAACH,OAAO,CAAC,CAAC,GAAGE,CAAC,GAAG,CAAC,CAAC;MAC9C,IAAME,SAAS,GAAG,IAAIF,CAAC,GAAG,CAAC,EAAE;MAC7BD,cAAc,CAACG,SAAS,CAAC,GAAG,CAAC;IAC/B;IAGAvC,QAAQ,CAACnC,OAAO,CAAC,UAACyD,OAAO,EAAK;MAC5B,IAAMkB,WAAW,GAAG,IAAIR,IAAI,CAACV,OAAO,CAACmB,IAAI,CAAC;MAC1C,IAAID,WAAW,IAAIP,WAAW,IAAIO,WAAW,IAAIT,GAAG,EAAE;QAEpD,IAAMW,cAAc,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACJ,WAAW,CAACK,OAAO,CAAC,CAAC,GAAGZ,WAAW,CAACY,OAAO,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC1G,IAAMC,SAAS,GAAGH,IAAI,CAACC,KAAK,CAACF,cAAc,GAAG,CAAC,CAAC;QAChD,IAAII,SAAS,IAAI,CAAC,IAAIA,SAAS,GAAG,CAAC,EAAE;UACnC,IAAMP,UAAS,GAAG,IAAIO,SAAS,GAAG,CAAC,EAAE;UACrCV,cAAc,CAACG,UAAS,CAAC,GAAG,CAACH,cAAc,CAACG,UAAS,CAAC,IAAI,CAAC,IAAI,CAAC;QAClE;MACF;IACF,CAAC,CAAC;IAEF,OAAO;MACLQ,MAAM,EAAE9F,MAAM,CAACC,IAAI,CAACkF,cAAc,CAAC;MACnCY,QAAQ,EAAE,CACR;QACEC,IAAI,EAAEhG,MAAM,CAACiG,MAAM,CAACd,cAAc,CAAC;QACnCe,KAAK,EAAE,SAAPA,KAAKA,CAAA;UAAA,OAAQ1E,KAAK,CAAC2E,MAAM,CAACC,OAAO;QAAA;MACnC,CAAC;IAEL,CAAC;EACH,CAAC;EAGD,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;IAElC,IAAMC,cAAc,GAAG9G,kBAAA,CAAIuD,QAAQ,EAChCwD,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAK,IAAI1B,IAAI,CAAC0B,CAAC,CAACjB,IAAI,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,IAAIb,IAAI,CAACyB,CAAC,CAAChB,IAAI,CAAC,CAACI,OAAO,CAAC,CAAC;IAAA,EAAC,CACvEc,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACZC,OAAO,CAAC,CAAC;IAEZ,IAAMC,UAAU,GAAGN,cAAc,CAACO,GAAG,CAAC,UAACxC,OAAO,EAAK;MAEjD,IAAIyC,WAAW,GAAG,CAAC;MACnBzC,OAAO,CAAC0C,SAAS,CAACnG,OAAO,CAAC,UAACoG,QAAQ,EAAK;QACtCA,QAAQ,CAACC,IAAI,CAACrG,OAAO,CAAC,UAACsG,GAAG,EAAK;UAC7B,IAAIA,GAAG,CAAC5C,WAAW,EAAE;YACnBwC,WAAW,IAAII,GAAG,CAACC,MAAM,GAAGD,GAAG,CAACE,IAAI;UACtC;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAON,WAAW;IACpB,CAAC,CAAC;IAEF,IAAMhB,MAAM,GAAGQ,cAAc,CAACO,GAAG,CAAC,UAACxC,OAAO,EAAK;MAC7C,IAAMmB,IAAI,GAAG,IAAIT,IAAI,CAACV,OAAO,CAACmB,IAAI,CAAC;MACnC,OAAO,GAAGA,IAAI,CAAC6B,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI7B,IAAI,CAACN,OAAO,CAAC,CAAC,EAAE;IACnD,CAAC,CAAC;IAEF,OAAO;MACLY,MAAM,EAANA,MAAM;MACNC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAEY,UAAU;QAChBV,KAAK,EAAE,SAAPA,KAAKA,CAAA;UAAA,OAAQ1E,KAAK,CAAC2E,MAAM,CAACC,OAAO;QAAA;QACjCkB,WAAW,EAAE;MACf,CAAC,CACF;MACDC,MAAM,EAAE,CAAC,cAAc;IACzB,CAAC;EACH,CAAC;EAGD,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;IAClC,IAAIrE,kBAAkB,CAACxC,MAAM,KAAK,CAAC,EAAE;MACnC,OAAO,IAAI;IACb;IAEA,IAAM8G,kBAAkB,GAAGjI,kBAAA,CAAI2D,kBAAkB,EAC9CoD,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAK,IAAI1B,IAAI,CAAC0B,CAAC,CAACjB,IAAI,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,IAAIb,IAAI,CAACyB,CAAC,CAAChB,IAAI,CAAC,CAACI,OAAO,CAAC,CAAC;IAAA,EAAC,CACvEc,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACZC,OAAO,CAAC,CAAC;IAEZ,IAAMb,MAAM,GAAG2B,kBAAkB,CAACZ,GAAG,CAAC,UAACa,WAAW,EAAK;MACrD,IAAMlC,IAAI,GAAG,IAAIT,IAAI,CAAC2C,WAAW,CAAClC,IAAI,CAAC;MACvC,OAAO,GAAGA,IAAI,CAAC6B,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI7B,IAAI,CAACN,OAAO,CAAC,CAAC,EAAE;IACnD,CAAC,CAAC;IAEF,IAAMc,IAAI,GAAGyB,kBAAkB,CAACZ,GAAG,CAAC,UAACa,WAAW;MAAA,OAAKA,WAAW,CAACC,KAAK;IAAA,EAAC;IAEvE,OAAO;MACL7B,MAAM,EAANA,MAAM;MACNC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAJA,IAAI;QACJE,KAAK,EAAE,SAAPA,KAAKA,CAAA;UAAA,OAAQ1E,KAAK,CAAC2E,MAAM,CAACyB,IAAI;QAAA;QAC9BN,WAAW,EAAE;MACf,CAAC,CACF;MACDC,MAAM,EAAE,CAAC,aAAa;IACxB,CAAC;EACH,CAAC;EAGD,IAAMM,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IACjC,IAAMC,YAAoC,GAAG;MAC3CC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE,CAAC;MACPC,SAAS,EAAE,CAAC;MACZC,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE;IACR,CAAC;IAGDrF,QAAQ,CAACnC,OAAO,CAAC,UAACyD,OAAO,EAAK;MAC5BA,OAAO,CAAC0C,SAAS,CAACnG,OAAO,CAAC,UAACoG,QAAQ,EAAK;QACtC,IAAMqB,aAAa,GAAGrB,QAAQ,CAACC,IAAI,CAAC7G,MAAM,CAAC,UAAC8G,GAAG;UAAA,OAAKA,GAAG,CAAC5C,WAAW;QAAA,EAAC,CAAC3D,MAAM;QAE3E,IAAI0H,aAAa,KAAK,CAAC,EAAE;QAGzB,IAAMC,aAAa,GAAGtB,QAAQ,CAACA,QAAQ,CAACuB,mBAAmB,CAAC,CAAC,CAAC;QAE9D,IAAI,CAAC,OAAO,CAAC,CAACC,QAAQ,CAACF,aAAa,CAAC,EAAE;UACrCR,YAAY,CAAC,OAAO,CAAC,IAAIO,aAAa;QACxC,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAACG,QAAQ,CAACF,aAAa,CAAC,EAAE;UAC5DR,YAAY,CAAC,MAAM,CAAC,IAAIO,aAAa;QACvC,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,CAACG,QAAQ,CAACF,aAAa,CAAC,EAAE;UAChDR,YAAY,CAAC,WAAW,CAAC,IAAIO,aAAa;QAC5C,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,CAACG,QAAQ,CAACF,aAAa,CAAC,EAAE;UACpER,YAAY,CAAC,MAAM,CAAC,IAAIO,aAAa;QACvC,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAACG,QAAQ,CAACF,aAAa,CAAC,EAAE;UACnFR,YAAY,CAAC,MAAM,CAAC,IAAIO,aAAa;QACvC,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC,CAACG,QAAQ,CAACF,aAAa,CAAC,EAAE;UAC7DR,YAAY,CAAC,MAAM,CAAC,IAAIO,aAAa;QACvC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO;MACLvC,MAAM,EAAE9F,MAAM,CAACC,IAAI,CAAC6H,YAAY,CAAC;MACjC/B,QAAQ,EAAE,CACR;QACEC,IAAI,EAAEhG,MAAM,CAACiG,MAAM,CAAC6B,YAAY,CAAC;QACjC5B,KAAK,EAAE,SAAPA,KAAKA,CAAA,EAAmB;UAAA,IAAhBuC,OAAO,GAAA/H,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAgI,SAAA,GAAAhI,SAAA,MAAG,CAAC;UAEjB,IAAMyF,MAAM,GAAG,CACb3E,KAAK,CAAC2E,MAAM,CAACC,OAAO,EACpB5E,KAAK,CAAC2E,MAAM,CAACwC,OAAO,EACpBnH,KAAK,CAAC2E,MAAM,CAACyC,OAAO,EACpBpH,KAAK,CAAC2E,MAAM,CAACyB,IAAI,EACjBpG,KAAK,CAAC2E,MAAM,CAAC3B,KAAK,EAClBhD,KAAK,CAAC2E,MAAM,CAAC0C,YAAY,CAC1B;UACD,OAAO1C,MAAM,CAACT,IAAI,CAACC,KAAK,CAACD,IAAI,CAACoD,MAAM,CAAC,CAAC,GAAG3C,MAAM,CAACxF,MAAM,CAAC,CAAC;QAC1D;MACF,CAAC;IAEL,CAAC;EACH,CAAC;EAED,IAAI4C,SAAS,EAAE;IACb,OACEhB,KAAA,CAACrB,IAAI;MAAC6H,KAAK,EAAEC,MAAM,CAACC,gBAAiB;MAAAC,QAAA,GACnC7G,IAAA,CAACd,iBAAiB;QAAC4H,IAAI,EAAC,OAAO;QAACjD,KAAK,EAAE1E,KAAK,CAAC2E,MAAM,CAACC;MAAQ,CAAE,CAAC,EAC/D/D,IAAA,CAAClB,IAAI;QAAC4H,KAAK,EAAEC,MAAM,CAACI,WAAY;QAAAF,QAAA,EAAC;MAAyB,CAAM,CAAC;IAAA,CAC7D,CAAC;EAEX;EAEA,OACE3G,KAAA,CAACrB,IAAI;IAAC6H,KAAK,EAAEC,MAAM,CAACK,SAAU;IAAAH,QAAA,GAC5B3G,KAAA,CAACrB,IAAI;MAAC6H,KAAK,EAAEC,MAAM,CAACM,MAAO;MAAAJ,QAAA,GACzB7G,IAAA,CAACf,gBAAgB;QAACyH,KAAK,EAAEC,MAAM,CAACO,UAAW;QAACC,OAAO,EAAE,SAATA,OAAOA,CAAA;UAAA,OAAQ5G,UAAU,CAAC6G,MAAM,CAAC,CAAC;QAAA,CAAC;QAAAP,QAAA,EAC7E7G,IAAA,CAACR,WAAW;UAAC6H,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAACwD,WAAY;UAACR,IAAI,EAAE;QAAG,CAAE;MAAC,CAC3C,CAAC,EACnB9G,IAAA,CAAClB,IAAI;QAAC4H,KAAK,EAAEC,MAAM,CAACY,WAAY;QAAAV,QAAA,EAAC;MAAkB,CAAM,CAAC,EAC1D7G,IAAA,CAACnB,IAAI;QAAC6H,KAAK,EAAE;UAAEc,KAAK,EAAE;QAAG;MAAE,CAAE,CAAC;IAAA,CAC1B,CAAC,EAEPtH,KAAA,CAAClB,UAAU;MAAC0H,KAAK,EAAEC,MAAM,CAACc,OAAQ;MAAAZ,QAAA,GAEhC3G,KAAA,CAACrB,IAAI;QAAC6H,KAAK,EAAEC,MAAM,CAACrE,OAAQ;QAAAuE,QAAA,GAC1B3G,KAAA,CAACjB,gBAAgB;UAACyH,KAAK,EAAEC,MAAM,CAACe,aAAc;UAACP,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQ9E,aAAa,CAAC,kBAAkB,CAAC;UAAA,CAAC;UAAAwE,QAAA,GAC9F3G,KAAA,CAACrB,IAAI;YAAC6H,KAAK,EAAEC,MAAM,CAACgB,qBAAsB;YAAAd,QAAA,GACxC7G,IAAA,CAACL,QAAQ;cAAC0H,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAACC,OAAQ;cAAC+C,IAAI,EAAE;YAAG,CAAE,CAAC,EACpD9G,IAAA,CAAClB,IAAI;cAAC4H,KAAK,EAAEC,MAAM,CAACiB,YAAa;cAAAf,QAAA,EAAC;YAAiB,CAAM,CAAC;UAAA,CACtD,CAAC,EACNnF,gBAAgB,CAACL,gBAAgB,GAChCrB,IAAA,CAACN,SAAS;YAAC2H,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAAC+D,aAAc;YAACf,IAAI,EAAE;UAAG,CAAE,CAAC,GAE3D9G,IAAA,CAACP,WAAW;YAAC4H,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAAC+D,aAAc;YAACf,IAAI,EAAE;UAAG,CAAE,CAC7D;QAAA,CACe,CAAC,EAElBpF,gBAAgB,CAACL,gBAAgB,IAChCrB,IAAA,CAACnB,IAAI;UAAC6H,KAAK,EAAEC,MAAM,CAACmB,cAAe;UAAAjB,QAAA,EAChCnG,QAAQ,CAACpC,MAAM,GAAG,CAAC,GAClB4B,KAAA,CAAAE,SAAA;YAAAyG,QAAA,GACE7G,IAAA,CAAClB,IAAI;cAAC4H,KAAK,EAAEC,MAAM,CAACoB,gBAAiB;cAAAlB,QAAA,EAAC;YAAuC,CAAM,CAAC,EACpF7G,IAAA,CAACT,QAAQ;cACPoE,IAAI,EAAEnB,uBAAuB,CAAC,CAAE;cAChCgF,KAAK,EAAE,GAAI;cACXQ,MAAM,EAAE,GAAI;cACZC,WAAW,EAAE;gBACXC,eAAe,EAAE/I,KAAK,CAAC2E,MAAM,CAACqE,OAAO;gBACrCC,sBAAsB,EAAEjJ,KAAK,CAAC2E,MAAM,CAACqE,OAAO;gBAC5CE,oBAAoB,EAAElJ,KAAK,CAAC2E,MAAM,CAACqE,OAAO;gBAC1CG,aAAa,EAAE,CAAC;gBAChBzE,KAAK,EAAE,SAAPA,KAAKA,CAAA;kBAAA,IAAGuC,OAAO,GAAA/H,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAgI,SAAA,GAAAhI,SAAA,MAAG,CAAC;kBAAA,OAAKc,KAAK,CAAC2E,MAAM,CAACC,OAAO;gBAAA;gBAC5CwE,UAAU,EAAE,SAAZA,UAAUA,CAAA;kBAAA,IAAGnC,OAAO,GAAA/H,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAgI,SAAA,GAAAhI,SAAA,MAAG,CAAC;kBAAA,OAAKc,KAAK,CAAC2E,MAAM,CAAC+D,aAAa;gBAAA;gBACvDnB,KAAK,EAAE;kBACL8B,YAAY,EAAE;gBAChB,CAAC;gBACDC,aAAa,EAAE;cACjB,CAAE;cACF/B,KAAK,EAAEC,MAAM,CAAC+B,KAAM;cACpBC,qBAAqB,EAAE;YAAK,CAC7B,CAAC;UAAA,CACF,CAAC,GAEH3I,IAAA,CAAClB,IAAI;YAAC4H,KAAK,EAAEC,MAAM,CAACiC,UAAW;YAAA/B,QAAA,EAAC;UAEhC,CAAM;QACP,CACG,CACP;MAAA,CACG,CAAC,EAGP3G,KAAA,CAACrB,IAAI;QAAC6H,KAAK,EAAEC,MAAM,CAACrE,OAAQ;QAAAuE,QAAA,GAC1B3G,KAAA,CAACjB,gBAAgB;UAACyH,KAAK,EAAEC,MAAM,CAACe,aAAc;UAACP,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQ9E,aAAa,CAAC,gBAAgB,CAAC;UAAA,CAAC;UAAAwE,QAAA,GAC5F3G,KAAA,CAACrB,IAAI;YAAC6H,KAAK,EAAEC,MAAM,CAACgB,qBAAsB;YAAAd,QAAA,GACxC7G,IAAA,CAACJ,QAAQ;cAACyH,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAACC,OAAQ;cAAC+C,IAAI,EAAE;YAAG,CAAE,CAAC,EACpD9G,IAAA,CAAClB,IAAI;cAAC4H,KAAK,EAAEC,MAAM,CAACiB,YAAa;cAAAf,QAAA,EAAC;YAAe,CAAM,CAAC;UAAA,CACpD,CAAC,EACNnF,gBAAgB,CAACJ,cAAc,GAC9BtB,IAAA,CAACN,SAAS;YAAC2H,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAAC+D,aAAc;YAACf,IAAI,EAAE;UAAG,CAAE,CAAC,GAE3D9G,IAAA,CAACP,WAAW;YAAC4H,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAAC+D,aAAc;YAACf,IAAI,EAAE;UAAG,CAAE,CAC7D;QAAA,CACe,CAAC,EAElBpF,gBAAgB,CAACJ,cAAc,IAC9BtB,IAAA,CAACnB,IAAI;UAAC6H,KAAK,EAAEC,MAAM,CAACmB,cAAe;UAAAjB,QAAA,EAChCnG,QAAQ,CAACpC,MAAM,GAAG,CAAC,GAClB4B,KAAA,CAAAE,SAAA;YAAAyG,QAAA,GACE7G,IAAA,CAAClB,IAAI;cAAC4H,KAAK,EAAEC,MAAM,CAACoB,gBAAiB;cAAAlB,QAAA,EAAC;YAA+C,CAAM,CAAC,EAC5F7G,IAAA,CAACV,SAAS;cACRqE,IAAI,EAAEK,qBAAqB,CAAC,CAAE;cAC9BwD,KAAK,EAAE,GAAI;cACXQ,MAAM,EAAE,GAAI;cACZC,WAAW,EAAE;gBACXC,eAAe,EAAE/I,KAAK,CAAC2E,MAAM,CAACqE,OAAO;gBACrCC,sBAAsB,EAAEjJ,KAAK,CAAC2E,MAAM,CAACqE,OAAO;gBAC5CE,oBAAoB,EAAElJ,KAAK,CAAC2E,MAAM,CAACqE,OAAO;gBAC1CG,aAAa,EAAE,CAAC;gBAChBzE,KAAK,EAAE,SAAPA,KAAKA,CAAA;kBAAA,IAAGuC,OAAO,GAAA/H,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAgI,SAAA,GAAAhI,SAAA,MAAG,CAAC;kBAAA,OAAKc,KAAK,CAAC2E,MAAM,CAACC,OAAO;gBAAA;gBAC5CwE,UAAU,EAAE,SAAZA,UAAUA,CAAA;kBAAA,IAAGnC,OAAO,GAAA/H,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAgI,SAAA,GAAAhI,SAAA,MAAG,CAAC;kBAAA,OAAKc,KAAK,CAAC2E,MAAM,CAAC+D,aAAa;gBAAA;gBACvDnB,KAAK,EAAE;kBACL8B,YAAY,EAAE;gBAChB,CAAC;gBACDK,YAAY,EAAE;kBACZpL,CAAC,EAAE,GAAG;kBACNwH,WAAW,EAAE,GAAG;kBAChBoC,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAACC;gBACvB;cACF,CAAE;cACF+E,MAAM;cACNpC,KAAK,EAAEC,MAAM,CAAC+B;YAAM,CACrB,CAAC;UAAA,CACF,CAAC,GAEH1I,IAAA,CAAClB,IAAI;YAAC4H,KAAK,EAAEC,MAAM,CAACiC,UAAW;YAAA/B,QAAA,EAAC;UAEhC,CAAM;QACP,CACG,CACP;MAAA,CACG,CAAC,EAGP3G,KAAA,CAACrB,IAAI;QAAC6H,KAAK,EAAEC,MAAM,CAACrE,OAAQ;QAAAuE,QAAA,GAC1B3G,KAAA,CAACjB,gBAAgB;UAACyH,KAAK,EAAEC,MAAM,CAACe,aAAc;UAACP,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQ9E,aAAa,CAAC,gBAAgB,CAAC;UAAA,CAAC;UAAAwE,QAAA,GAC5F3G,KAAA,CAACrB,IAAI;YAAC6H,KAAK,EAAEC,MAAM,CAACgB,qBAAsB;YAAAd,QAAA,GACxC7G,IAAA,CAACF,KAAK;cAACuH,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAACC,OAAQ;cAAC+C,IAAI,EAAE;YAAG,CAAE,CAAC,EACjD9G,IAAA,CAAClB,IAAI;cAAC4H,KAAK,EAAEC,MAAM,CAACiB,YAAa;cAAAf,QAAA,EAAC;YAAe,CAAM,CAAC;UAAA,CACpD,CAAC,EACNnF,gBAAgB,CAACH,cAAc,GAC9BvB,IAAA,CAACN,SAAS;YAAC2H,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAAC+D,aAAc;YAACf,IAAI,EAAE;UAAG,CAAE,CAAC,GAE3D9G,IAAA,CAACP,WAAW;YAAC4H,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAAC+D,aAAc;YAACf,IAAI,EAAE;UAAG,CAAE,CAC7D;QAAA,CACe,CAAC,EAElBpF,gBAAgB,CAACH,cAAc,IAC9BvB,IAAA,CAACnB,IAAI;UAAC6H,KAAK,EAAEC,MAAM,CAACmB,cAAe;UAAAjB,QAAA,EAChC/F,kBAAkB,CAACxC,MAAM,GAAG,CAAC,GAC5B4B,KAAA,CAAAE,SAAA;YAAAyG,QAAA,GACE7G,IAAA,CAAClB,IAAI;cAAC4H,KAAK,EAAEC,MAAM,CAACoB,gBAAiB;cAAAlB,QAAA,EAAC;YAAkC,CAAM,CAAC,EAC/E7G,IAAA,CAACV,SAAS;cACRqE,IAAI,EAAEwB,qBAAqB,CAAC,CAAG;cAC/BqC,KAAK,EAAE,GAAI;cACXQ,MAAM,EAAE,GAAI;cACZC,WAAW,EAAE;gBACXC,eAAe,EAAE/I,KAAK,CAAC2E,MAAM,CAACqE,OAAO;gBACrCC,sBAAsB,EAAEjJ,KAAK,CAAC2E,MAAM,CAACqE,OAAO;gBAC5CE,oBAAoB,EAAElJ,KAAK,CAAC2E,MAAM,CAACqE,OAAO;gBAC1CG,aAAa,EAAE,CAAC;gBAChBzE,KAAK,EAAE,SAAPA,KAAKA,CAAA;kBAAA,IAAGuC,OAAO,GAAA/H,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAgI,SAAA,GAAAhI,SAAA,MAAG,CAAC;kBAAA,OAAKc,KAAK,CAAC2E,MAAM,CAACyB,IAAI;gBAAA;gBACzCgD,UAAU,EAAE,SAAZA,UAAUA,CAAA;kBAAA,IAAGnC,OAAO,GAAA/H,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAgI,SAAA,GAAAhI,SAAA,MAAG,CAAC;kBAAA,OAAKc,KAAK,CAAC2E,MAAM,CAAC+D,aAAa;gBAAA;gBACvDnB,KAAK,EAAE;kBACL8B,YAAY,EAAE;gBAChB,CAAC;gBACDK,YAAY,EAAE;kBACZpL,CAAC,EAAE,GAAG;kBACNwH,WAAW,EAAE,GAAG;kBAChBoC,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAACyB;gBACvB;cACF,CAAE;cACFuD,MAAM;cACNpC,KAAK,EAAEC,MAAM,CAAC+B;YAAM,CACrB,CAAC;UAAA,CACF,CAAC,GAEH1I,IAAA,CAAClB,IAAI;YAAC4H,KAAK,EAAEC,MAAM,CAACiC,UAAW;YAAA/B,QAAA,EAAC;UAEhC,CAAM;QACP,CACG,CACP;MAAA,CACG,CAAC,EAGP3G,KAAA,CAACrB,IAAI;QAAC6H,KAAK,EAAEC,MAAM,CAACrE,OAAQ;QAAAuE,QAAA,GAC1B3G,KAAA,CAACjB,gBAAgB;UAACyH,KAAK,EAAEC,MAAM,CAACe,aAAc;UAACP,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQ9E,aAAa,CAAC,eAAe,CAAC;UAAA,CAAC;UAAAwE,QAAA,GAC3F3G,KAAA,CAACrB,IAAI;YAAC6H,KAAK,EAAEC,MAAM,CAACgB,qBAAsB;YAAAd,QAAA,GACxC7G,IAAA,CAACH,UAAU;cAACwH,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAACC,OAAQ;cAAC+C,IAAI,EAAE;YAAG,CAAE,CAAC,EACtD9G,IAAA,CAAClB,IAAI;cAAC4H,KAAK,EAAEC,MAAM,CAACiB,YAAa;cAAAf,QAAA,EAAC;YAAoB,CAAM,CAAC;UAAA,CACzD,CAAC,EACNnF,gBAAgB,CAACF,aAAa,GAC7BxB,IAAA,CAACN,SAAS;YAAC2H,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAAC+D,aAAc;YAACf,IAAI,EAAE;UAAG,CAAE,CAAC,GAE3D9G,IAAA,CAACP,WAAW;YAAC4H,MAAM,EAAElI,KAAK,CAAC2E,MAAM,CAAC+D,aAAc;YAACf,IAAI,EAAE;UAAG,CAAE,CAC7D;QAAA,CACe,CAAC,EAElBpF,gBAAgB,CAACF,aAAa,IAC7BxB,IAAA,CAACnB,IAAI;UAAC6H,KAAK,EAAEC,MAAM,CAACmB,cAAe;UAAAjB,QAAA,EAChCnG,QAAQ,CAACpC,MAAM,GAAG,CAAC,GAClB4B,KAAA,CAAAE,SAAA;YAAAyG,QAAA,GACE7G,IAAA,CAAClB,IAAI;cAAC4H,KAAK,EAAEC,MAAM,CAACoB,gBAAiB;cAAAlB,QAAA,EAAC;YAAyC,CAAM,CAAC,EACtF7G,IAAA,CAACT,QAAQ;cACPoE,IAAI,EAAE6B,oBAAoB,CAAC,CAAE;cAC7BgC,KAAK,EAAE,GAAI;cACXQ,MAAM,EAAE,GAAI;cACZC,WAAW,EAAE;gBACXC,eAAe,EAAE/I,KAAK,CAAC2E,MAAM,CAACqE,OAAO;gBACrCC,sBAAsB,EAAEjJ,KAAK,CAAC2E,MAAM,CAACqE,OAAO;gBAC5CE,oBAAoB,EAAElJ,KAAK,CAAC2E,MAAM,CAACqE,OAAO;gBAC1CG,aAAa,EAAE,CAAC;gBAChBzE,KAAK,EAAE,SAAPA,KAAKA,CAAA;kBAAA,IAAGuC,OAAO,GAAA/H,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAgI,SAAA,GAAAhI,SAAA,MAAG,CAAC;kBAAA,OAAKc,KAAK,CAAC2E,MAAM,CAACC,OAAO;gBAAA;gBAC5CwE,UAAU,EAAE,SAAZA,UAAUA,CAAA;kBAAA,IAAGnC,OAAO,GAAA/H,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAgI,SAAA,GAAAhI,SAAA,MAAG,CAAC;kBAAA,OAAKc,KAAK,CAAC2E,MAAM,CAAC+D,aAAa;gBAAA;gBACvDnB,KAAK,EAAE;kBACL8B,YAAY,EAAE;gBAChB,CAAC;gBACDC,aAAa,EAAE;cACjB,CAAE;cACF/B,KAAK,EAAEC,MAAM,CAAC+B,KAAM;cACpBC,qBAAqB,EAAE;YAAK,CAC7B,CAAC;UAAA,CACF,CAAC,GAEH3I,IAAA,CAAClB,IAAI;YAAC4H,KAAK,EAAEC,MAAM,CAACiC,UAAW;YAAA/B,QAAA,EAAC;UAEhC,CAAM;QACP,CACG,CACP;MAAA,CACG,CAAC;IAAA,CACG,CAAC;EAAA,CACT,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAG5H,UAAU,CAACgK,MAAM,CAAC;EAC/B/B,SAAS,EAAE;IACTgC,IAAI,EAAE,CAAC;IACPd,eAAe,EAAE/I,KAAK,CAAC2E,MAAM,CAACmF;EAChC,CAAC;EACDhC,MAAM,EAAE;IACNiC,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAElK,KAAK,CAACmK,OAAO,CAACC,EAAE;IACzBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAEtK,KAAK,CAAC2E,MAAM,CAACqE;EAClC,CAAC;EACDZ,WAAW,EAAE;IACX1D,KAAK,EAAE1E,KAAK,CAAC2E,MAAM,CAACwD,WAAW;IAC/BoC,QAAQ,EAAEvK,KAAK,CAACwK,UAAU,CAACD,QAAQ,CAACE,EAAE;IACtCC,UAAU,EAAE1K,KAAK,CAACwK,UAAU,CAACE,UAAU,CAACC;EAC1C,CAAC;EACD5C,UAAU,EAAE;IACVmC,OAAO,EAAElK,KAAK,CAACmK,OAAO,CAACS,EAAE;IACzBvC,KAAK,EAAE,EAAE;IACT4B,UAAU,EAAE;EACd,CAAC;EACD3B,OAAO,EAAE;IACPuB,IAAI,EAAE;EACR,CAAC;EACD1G,OAAO,EAAE;IACP4F,eAAe,EAAE/I,KAAK,CAAC2E,MAAM,CAACqE,OAAO;IACrC6B,MAAM,EAAE7K,KAAK,CAACmK,OAAO,CAACC,EAAE;IACxBU,YAAY,EAAE9K,KAAK,CAACmK,OAAO,CAACY,EAAE;IAC9B1B,YAAY,EAAErJ,KAAK,CAACqJ,YAAY,CAACe,EAAE;IACnCY,QAAQ,EAAE;EACZ,CAAC;EACDzC,aAAa,EAAE;IACbwB,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAElK,KAAK,CAACmK,OAAO,CAACC,EAAE;IACzBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAEtK,KAAK,CAAC2E,MAAM,CAACsG;EAClC,CAAC;EACDzC,qBAAqB,EAAE;IACrBuB,aAAa,EAAE,KAAK;IACpBE,UAAU,EAAE;EACd,CAAC;EACDxB,YAAY,EAAE;IACZ/D,KAAK,EAAE1E,KAAK,CAAC2E,MAAM,CAACwD,WAAW;IAC/BoC,QAAQ,EAAEvK,KAAK,CAACwK,UAAU,CAACD,QAAQ,CAACH,EAAE;IACtCM,UAAU,EAAE1K,KAAK,CAACwK,UAAU,CAACE,UAAU,CAACC,QAAQ;IAChDO,UAAU,EAAElL,KAAK,CAACmK,OAAO,CAACY;EAC5B,CAAC;EACDpC,cAAc,EAAE;IACduB,OAAO,EAAElK,KAAK,CAACmK,OAAO,CAACC,EAAE;IACzBH,UAAU,EAAE;EACd,CAAC;EACDrB,gBAAgB,EAAE;IAChBlE,KAAK,EAAE1E,KAAK,CAAC2E,MAAM,CAAC+D,aAAa;IACjC6B,QAAQ,EAAEvK,KAAK,CAACwK,UAAU,CAACD,QAAQ,CAACQ,EAAE;IACtCD,YAAY,EAAE9K,KAAK,CAACmK,OAAO,CAACC,EAAE;IAC9Be,SAAS,EAAE;EACb,CAAC;EACD5B,KAAK,EAAE;IACL6B,cAAc,EAAEpL,KAAK,CAACmK,OAAO,CAACC,EAAE;IAChCf,YAAY,EAAErJ,KAAK,CAACqJ,YAAY,CAACe;EACnC,CAAC;EACDX,UAAU,EAAE;IACV/E,KAAK,EAAE1E,KAAK,CAAC2E,MAAM,CAAC+D,aAAa;IACjC6B,QAAQ,EAAEvK,KAAK,CAACwK,UAAU,CAACD,QAAQ,CAACH,EAAE;IACtCe,SAAS,EAAE,QAAQ;IACnBjB,OAAO,EAAElK,KAAK,CAACmK,OAAO,CAACC;EACzB,CAAC;EACD3C,gBAAgB,EAAE;IAChBoC,IAAI,EAAE,CAAC;IACPG,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDrC,WAAW,EAAE;IACXlD,KAAK,EAAE1E,KAAK,CAAC2E,MAAM,CAACwD,WAAW;IAC/BoC,QAAQ,EAAEvK,KAAK,CAACwK,UAAU,CAACD,QAAQ,CAACH,EAAE;IACtCiB,SAAS,EAAErL,KAAK,CAACmK,OAAO,CAACC;EAC3B;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}