{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { defaultExercises } from \"../data/defaultExercises\";\nvar EXERCISES_STORAGE_KEY = \"exercises\";\nvar EXERCISES_INITIALIZED_KEY = \"exercises_initialized\";\nexport var initializeExercises = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var initialized = yield AsyncStorage.getItem(EXERCISES_INITIALIZED_KEY);\n      if (!initialized) {\n        yield AsyncStorage.setItem(EXERCISES_STORAGE_KEY, JSON.stringify(defaultExercises));\n        yield AsyncStorage.setItem(EXERCISES_INITIALIZED_KEY, \"true\");\n      }\n    } catch (error) {\n      console.error(\"Error initializing exercises:\", error);\n    }\n  });\n  return function initializeExercises() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getAllExercises = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      yield initializeExercises();\n      var exercisesJson = yield AsyncStorage.getItem(EXERCISES_STORAGE_KEY);\n      return exercisesJson ? JSON.parse(exercisesJson) : [];\n    } catch (error) {\n      console.error(\"Error retrieving exercises:\", error);\n      return [];\n    }\n  });\n  return function getAllExercises() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getExerciseById = function () {\n  var _ref3 = _asyncToGenerator(function* (id) {\n    var exercises = yield getAllExercises();\n    return exercises.find(function (exercise) {\n      return exercise.id === id;\n    }) || null;\n  });\n  return function getExerciseById(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getExercisesByMuscleGroup = function () {\n  var _ref4 = _asyncToGenerator(function* (muscleGroup) {\n    var exercises = yield getAllExercises();\n    return exercises.filter(function (exercise) {\n      return exercise.primaryMuscleGroups.includes(muscleGroup) || exercise.secondaryMuscleGroups && exercise.secondaryMuscleGroups.includes(muscleGroup);\n    });\n  });\n  return function getExercisesByMuscleGroup(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var getExercisesByEquipment = function () {\n  var _ref5 = _asyncToGenerator(function* (equipment) {\n    var exercises = yield getAllExercises();\n    return exercises.filter(function (exercise) {\n      return exercise.equipment.includes(equipment);\n    });\n  });\n  return function getExercisesByEquipment(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var searchExercises = function () {\n  var _ref6 = _asyncToGenerator(function* (searchTerm) {\n    var exercises = yield getAllExercises();\n    var term = searchTerm.toLowerCase();\n    return exercises.filter(function (exercise) {\n      return exercise.name.toLowerCase().includes(term);\n    });\n  });\n  return function searchExercises(_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var saveExercise = function () {\n  var _ref7 = _asyncToGenerator(function* (exercise) {\n    try {\n      var exercises = yield getAllExercises();\n      if (!exercise.id) {\n        exercise.id = uuidv4();\n        exercise.isCustom = true;\n      }\n      var existingIndex = exercises.findIndex(function (e) {\n        return e.id === exercise.id;\n      });\n      if (existingIndex >= 0) {\n        exercises[existingIndex] = exercise;\n      } else {\n        exercises.push(exercise);\n      }\n      yield AsyncStorage.setItem(EXERCISES_STORAGE_KEY, JSON.stringify(exercises));\n      return exercise;\n    } catch (error) {\n      console.error(\"Error saving exercise:\", error);\n      throw error;\n    }\n  });\n  return function saveExercise(_x5) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var deleteExercise = function () {\n  var _ref8 = _asyncToGenerator(function* (id) {\n    try {\n      var exercises = yield getAllExercises();\n      var exercise = exercises.find(function (e) {\n        return e.id === id;\n      });\n      if (exercise && !exercise.isCustom) {\n        return false;\n      }\n      var filteredExercises = exercises.filter(function (exercise) {\n        return exercise.id !== id;\n      });\n      yield AsyncStorage.setItem(EXERCISES_STORAGE_KEY, JSON.stringify(filteredExercises));\n      return true;\n    } catch (error) {\n      console.error(\"Error deleting exercise:\", error);\n      return false;\n    }\n  });\n  return function deleteExercise(_x6) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var toggleExerciseBookmark = function () {\n  var _ref9 = _asyncToGenerator(function* (id) {\n    try {\n      var exercises = yield getAllExercises();\n      var exerciseIndex = exercises.findIndex(function (e) {\n        return e.id === id;\n      });\n      if (exerciseIndex < 0) {\n        return null;\n      }\n      exercises[exerciseIndex].isBookmarked = !exercises[exerciseIndex].isBookmarked;\n      yield AsyncStorage.setItem(EXERCISES_STORAGE_KEY, JSON.stringify(exercises));\n      return exercises[exerciseIndex];\n    } catch (error) {\n      console.error(\"Error toggling exercise bookmark:\", error);\n      return null;\n    }\n  });\n  return function toggleExerciseBookmark(_x7) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nexport var getBookmarkedExercises = function () {\n  var _ref10 = _asyncToGenerator(function* () {\n    var exercises = yield getAllExercises();\n    return exercises.filter(function (exercise) {\n      return exercise.isBookmarked;\n    });\n  });\n  return function getBookmarkedExercises() {\n    return _ref10.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["AsyncStorage","v4","uuidv4","defaultExercises","EXERCISES_STORAGE_KEY","EXERCISES_INITIALIZED_KEY","initializeExercises","_ref","_asyncToGenerator","initialized","getItem","setItem","JSON","stringify","error","console","apply","arguments","getAllExercises","_ref2","exercisesJson","parse","getExerciseById","_ref3","id","exercises","find","exercise","_x","getExercisesByMuscleGroup","_ref4","muscleGroup","filter","primaryMuscleGroups","includes","secondaryMuscleGroups","_x2","getExercisesByEquipment","_ref5","equipment","_x3","searchExercises","_ref6","searchTerm","term","toLowerCase","name","_x4","saveExercise","_ref7","isCustom","existingIndex","findIndex","e","push","_x5","deleteExercise","_ref8","filteredExercises","_x6","toggleExerciseBookmark","_ref9","exerciseIndex","isBookmarked","_x7","getBookmarkedExercises","_ref10"],"sources":["/workspaces/Mygymapp/services/exerciseService.ts"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport type { Exercise, MuscleGroup, EquipmentType } from \"../models/Exercise\"\nimport { defaultExercises } from \"../data/defaultExercises\"\n\n// Keys for AsyncStorage\nconst EXERCISES_STORAGE_KEY = \"exercises\"\nconst EXERCISES_INITIALIZED_KEY = \"exercises_initialized\"\n\n// Initialize default exercises if not already done\nexport const initializeExercises = async (): Promise<void> => {\n  try {\n    const initialized = await AsyncStorage.getItem(EXERCISES_INITIALIZED_KEY)\n\n    if (!initialized) {\n      await AsyncStorage.setItem(EXERCISES_STORAGE_KEY, JSON.stringify(defaultExercises))\n      await AsyncStorage.setItem(EXERCISES_INITIALIZED_KEY, \"true\")\n    }\n  } catch (error) {\n    console.error(\"Error initializing exercises:\", error)\n  }\n}\n\n// Get all exercises\nexport const getAllExercises = async (): Promise<Exercise[]> => {\n  try {\n    // Ensure exercises are initialized\n    await initializeExercises()\n\n    const exercisesJson = await AsyncStorage.getItem(EXERCISES_STORAGE_KEY)\n    return exercisesJson ? JSON.parse(exercisesJson) : []\n  } catch (error) {\n    console.error(\"Error retrieving exercises:\", error)\n    return []\n  }\n}\n\n// Get exercise by ID\nexport const getExerciseById = async (id: string): Promise<Exercise | null> => {\n  const exercises = await getAllExercises()\n  return exercises.find((exercise) => exercise.id === id) || null\n}\n\n// Get exercises by muscle group\nexport const getExercisesByMuscleGroup = async (muscleGroup: MuscleGroup): Promise<Exercise[]> => {\n  const exercises = await getAllExercises()\n  return exercises.filter(\n    (exercise) =>\n      exercise.primaryMuscleGroups.includes(muscleGroup) ||\n      (exercise.secondaryMuscleGroups && exercise.secondaryMuscleGroups.includes(muscleGroup)),\n  )\n}\n\n// Get exercises by equipment type\nexport const getExercisesByEquipment = async (equipment: EquipmentType): Promise<Exercise[]> => {\n  const exercises = await getAllExercises()\n  return exercises.filter((exercise) => exercise.equipment.includes(equipment))\n}\n\n// Search exercises by name\nexport const searchExercises = async (searchTerm: string): Promise<Exercise[]> => {\n  const exercises = await getAllExercises()\n  const term = searchTerm.toLowerCase()\n  return exercises.filter((exercise) => exercise.name.toLowerCase().includes(term))\n}\n\n// Save an exercise (create or update)\nexport const saveExercise = async (exercise: Exercise): Promise<Exercise> => {\n  try {\n    const exercises = await getAllExercises()\n\n    // If exercise has no ID, create a new one\n    if (!exercise.id) {\n      exercise.id = uuidv4()\n      exercise.isCustom = true // Mark as custom exercise\n    }\n\n    // Find if exercise already exists to update or add new\n    const existingIndex = exercises.findIndex((e) => e.id === exercise.id)\n\n    if (existingIndex >= 0) {\n      exercises[existingIndex] = exercise\n    } else {\n      exercises.push(exercise)\n    }\n\n    await AsyncStorage.setItem(EXERCISES_STORAGE_KEY, JSON.stringify(exercises))\n    return exercise\n  } catch (error) {\n    console.error(\"Error saving exercise:\", error)\n    throw error\n  }\n}\n\n// Delete an exercise\nexport const deleteExercise = async (id: string): Promise<boolean> => {\n  try {\n    const exercises = await getAllExercises()\n    const exercise = exercises.find((e) => e.id === id)\n\n    // Don't allow deletion of default exercises\n    if (exercise && !exercise.isCustom) {\n      return false\n    }\n\n    const filteredExercises = exercises.filter((exercise) => exercise.id !== id)\n    await AsyncStorage.setItem(EXERCISES_STORAGE_KEY, JSON.stringify(filteredExercises))\n    return true\n  } catch (error) {\n    console.error(\"Error deleting exercise:\", error)\n    return false\n  }\n}\n\n// Toggle bookmark status for an exercise\nexport const toggleExerciseBookmark = async (id: string): Promise<Exercise | null> => {\n  try {\n    const exercises = await getAllExercises()\n    const exerciseIndex = exercises.findIndex((e) => e.id === id)\n\n    if (exerciseIndex < 0) {\n      return null\n    }\n\n    exercises[exerciseIndex].isBookmarked = !exercises[exerciseIndex].isBookmarked\n\n    await AsyncStorage.setItem(EXERCISES_STORAGE_KEY, JSON.stringify(exercises))\n    return exercises[exerciseIndex]\n  } catch (error) {\n    console.error(\"Error toggling exercise bookmark:\", error)\n    return null\n  }\n}\n\n// Get bookmarked exercises\nexport const getBookmarkedExercises = async (): Promise<Exercise[]> => {\n  const exercises = await getAllExercises()\n  return exercises.filter((exercise) => exercise.isBookmarked)\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}