{"ast":null,"code":"\"use client\";\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"selectedColor\"];\nvar _jsxFileName = \"/Users/recep/Gym/screens/CalendarScreen.tsx\";\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { theme } from \"../theme\";\nimport { Calendar as RNCalendar } from \"react-native-calendars\";\nimport { getScheduledWorkoutsForDate, getScheduledWorkoutsForDateRange, startScheduledWorkout } from \"../services/planningService\";\nimport { Calendar, Clock, Play, Plus } from \"lucide-react-native\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CalendarScreen({\n  navigation\n}) {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [scheduledWorkouts, setScheduledWorkouts] = useState([]);\n  const [markedDates, setMarkedDates] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isStartingWorkout, setIsStartingWorkout] = useState(false);\n  useEffect(() => {\n    loadScheduledWorkouts();\n  }, []);\n  useEffect(() => {\n    loadWorkoutsForDate(selectedDate);\n  }, [selectedDate]);\n  const loadScheduledWorkouts = async () => {\n    setIsLoading(true);\n    try {\n      const today = new Date();\n      const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n      const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n      startOfMonth.setDate(startOfMonth.getDate() - 7);\n      endOfMonth.setDate(endOfMonth.getDate() + 7);\n      const workouts = await getScheduledWorkoutsForDateRange(startOfMonth, endOfMonth);\n      const marked = {};\n      workouts.forEach(workout => {\n        const dateString = formatDateForCalendar(new Date(workout.date));\n        if (!marked[dateString]) {\n          marked[dateString] = {\n            marked: true,\n            dotColor: workout.isCompleted ? theme.colors.success : theme.colors.primary\n          };\n        } else {\n          marked[dateString].dots = [{\n            color: workout.isCompleted ? theme.colors.success : theme.colors.primary\n          }];\n        }\n      });\n      const selectedDateString = formatDateForCalendar(selectedDate);\n      marked[selectedDateString] = Object.assign({}, marked[selectedDateString], {\n        selected: true,\n        selectedColor: theme.colors.primary + \"33\"\n      });\n      setMarkedDates(marked);\n    } catch (error) {\n      console.error(\"Error loading scheduled workouts:\", error);\n      Alert.alert(\"Error\", \"Could not load scheduled workouts.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const loadWorkoutsForDate = async date => {\n    try {\n      const workouts = await getScheduledWorkoutsForDate(date);\n      setScheduledWorkouts(workouts);\n      const newMarkedDates = Object.assign({}, markedDates);\n      Object.keys(newMarkedDates).forEach(dateString => {\n        if (newMarkedDates[dateString].selected) {\n          const _newMarkedDates$dateS = newMarkedDates[dateString],\n            rest = _objectWithoutPropertiesLoose(_newMarkedDates$dateS, _excluded);\n          newMarkedDates[dateString] = rest;\n        }\n      });\n      const selectedDateString = formatDateForCalendar(date);\n      newMarkedDates[selectedDateString] = Object.assign({}, newMarkedDates[selectedDateString], {\n        selected: true,\n        selectedColor: theme.colors.primary + \"33\"\n      });\n      setMarkedDates(newMarkedDates);\n    } catch (error) {\n      console.error(\"Error loading workouts for date:\", error);\n    }\n  };\n  const formatDateForCalendar = date => {\n    return date.toISOString().split(\"T\")[0];\n  };\n  const formatDateForDisplay = date => {\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"long\",\n      month: \"long\",\n      day: \"numeric\"\n    });\n  };\n  const handleDateSelect = date => {\n    const selectedDate = new Date(date.timestamp);\n    setSelectedDate(selectedDate);\n  };\n  const handleStartWorkout = async scheduledWorkoutId => {\n    try {\n      setIsStartingWorkout(true);\n      const workoutId = await startScheduledWorkout(scheduledWorkoutId);\n      if (workoutId) {\n        loadScheduledWorkouts();\n        navigation.navigate(\"Workout\", {\n          workoutId\n        });\n      } else {\n        Alert.alert(\"Error\", \"Could not start the workout.\");\n      }\n    } catch (error) {\n      console.error(\"Error starting workout:\", error);\n      Alert.alert(\"Error\", \"Could not start the workout.\");\n    } finally {\n      setIsStartingWorkout(false);\n    }\n  };\n  const navigateToCreatePlan = () => {\n    navigation.navigate(\"CreateWorkoutPlan\");\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(RNCalendar, {\n      theme: {\n        backgroundColor: theme.colors.background,\n        calendarBackground: theme.colors.background,\n        textSectionTitleColor: theme.colors.textSecondary,\n        selectedDayBackgroundColor: theme.colors.primary,\n        selectedDayTextColor: theme.colors.white,\n        todayTextColor: theme.colors.primary,\n        dayTextColor: theme.colors.textPrimary,\n        textDisabledColor: theme.colors.textTertiary,\n        dotColor: theme.colors.primary,\n        selectedDotColor: theme.colors.white,\n        arrowColor: theme.colors.primary,\n        monthTextColor: theme.colors.textPrimary,\n        indicatorColor: theme.colors.primary\n      },\n      markedDates: markedDates,\n      onDayPress: handleDateSelect,\n      enableSwipeMonths: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.dateHeader,\n      children: _jsxDEV(Text, {\n        style: styles.dateText,\n        children: formatDateForDisplay(selectedDate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), _jsxDEV(ScrollView, {\n      style: styles.workoutsContainer,\n      children: isLoading ? _jsxDEV(View, {\n        style: styles.loadingContainer,\n        children: [_jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: theme.colors.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.loadingText,\n          children: \"Loading workouts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : scheduledWorkouts.length > 0 ? scheduledWorkouts.map(workout => _jsxDEV(View, {\n        style: styles.workoutCard,\n        children: [_jsxDEV(View, {\n          style: styles.workoutInfo,\n          children: [_jsxDEV(Text, {\n            style: styles.workoutName,\n            children: workout.templateName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: styles.workoutTime,\n            children: [_jsxDEV(Clock, {\n              stroke: theme.colors.textSecondary,\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), _jsxDEV(Text, {\n              style: styles.timeText,\n              children: new Date(workout.date).toLocaleTimeString([], {\n                hour: \"2-digit\",\n                minute: \"2-digit\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), workout.notes && _jsxDEV(Text, {\n            style: styles.workoutNotes,\n            children: workout.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this), workout.isCompleted ? _jsxDEV(View, {\n          style: styles.completedBadge,\n          children: _jsxDEV(Text, {\n            style: styles.completedText,\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }, this) : _jsxDEV(TouchableOpacity, {\n          style: styles.startButton,\n          onPress: () => handleStartWorkout(workout.id),\n          disabled: isStartingWorkout,\n          children: isStartingWorkout ? _jsxDEV(ActivityIndicator, {\n            size: \"small\",\n            color: theme.colors.white\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 21\n          }, this) : _jsxDEV(_Fragment, {\n            children: [_jsxDEV(Play, {\n              stroke: theme.colors.white,\n              size: 16,\n              fill: theme.colors.white\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 23\n            }, this), _jsxDEV(Text, {\n              style: styles.startButtonText,\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }, this)]\n      }, workout.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)) : _jsxDEV(View, {\n        style: styles.emptyContainer,\n        children: [_jsxDEV(Calendar, {\n          stroke: theme.colors.textSecondary,\n          size: 48\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.emptyText,\n          children: \"No workouts scheduled for this day.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.createPlanButton,\n          onPress: navigateToCreatePlan,\n          children: _jsxDEV(Text, {\n            style: styles.createPlanButtonText,\n            children: \"Create Workout Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.fab,\n      onPress: navigateToCreatePlan,\n      children: _jsxDEV(Plus, {\n        stroke: theme.colors.white,\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  dateHeader: {\n    backgroundColor: theme.colors.surface,\n    paddingVertical: theme.spacing.md,\n    paddingHorizontal: theme.spacing.lg,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.surfaceLight\n  },\n  dateText: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.lg,\n    fontWeight: theme.typography.fontWeight.semibold\n  },\n  workoutsContainer: {\n    flex: 1,\n    padding: theme.spacing.md\n  },\n  workoutCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: theme.borderRadius.md,\n    padding: theme.spacing.md,\n    marginBottom: theme.spacing.md,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  workoutInfo: {\n    flex: 1\n  },\n  workoutName: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.md,\n    fontWeight: theme.typography.fontWeight.semibold,\n    marginBottom: 4\n  },\n  workoutTime: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 4\n  },\n  timeText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.sm,\n    marginLeft: theme.spacing.xs\n  },\n  workoutNotes: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.sm,\n    fontStyle: \"italic\"\n  },\n  startButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: theme.borderRadius.md,\n    paddingVertical: theme.spacing.sm,\n    paddingHorizontal: theme.spacing.md,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  startButtonText: {\n    color: theme.colors.white,\n    fontSize: theme.typography.fontSize.sm,\n    fontWeight: theme.typography.fontWeight.medium,\n    marginLeft: theme.spacing.xs\n  },\n  completedBadge: {\n    backgroundColor: theme.colors.success + \"33\",\n    borderRadius: theme.borderRadius.md,\n    paddingVertical: theme.spacing.sm,\n    paddingHorizontal: theme.spacing.md\n  },\n  completedText: {\n    color: theme.colors.success,\n    fontSize: theme.typography.fontSize.sm,\n    fontWeight: theme.typography.fontWeight.medium\n  },\n  emptyContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing.xl\n  },\n  emptyText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.md,\n    textAlign: \"center\",\n    marginTop: theme.spacing.md,\n    marginBottom: theme.spacing.lg\n  },\n  createPlanButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: theme.borderRadius.md,\n    paddingVertical: theme.spacing.sm,\n    paddingHorizontal: theme.spacing.lg\n  },\n  createPlanButtonText: {\n    color: theme.colors.white,\n    fontSize: theme.typography.fontSize.md,\n    fontWeight: theme.typography.fontWeight.medium\n  },\n  loadingContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing.xl\n  },\n  loadingText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.md,\n    marginTop: theme.spacing.md\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing.lg,\n    right: theme.spacing.lg,\n    backgroundColor: theme.colors.primary,\n    width: 56,\n    height: 56,\n    borderRadius: 28,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    elevation: 4,\n    shadowColor: theme.colors.black,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84\n  }\n});","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_excluded","_jsxFileName","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","ScrollView","Alert","ActivityIndicator","theme","Calendar","RNCalendar","getScheduledWorkoutsForDate","getScheduledWorkoutsForDateRange","startScheduledWorkout","Clock","Play","Plus","jsxDEV","_jsxDEV","Fragment","_Fragment","CalendarScreen","navigation","selectedDate","setSelectedDate","Date","scheduledWorkouts","setScheduledWorkouts","markedDates","setMarkedDates","isLoading","setIsLoading","isStartingWorkout","setIsStartingWorkout","loadScheduledWorkouts","loadWorkoutsForDate","today","startOfMonth","getFullYear","getMonth","endOfMonth","setDate","getDate","workouts","marked","forEach","workout","dateString","formatDateForCalendar","date","dotColor","isCompleted","colors","success","primary","dots","color","selectedDateString","Object","assign","selected","selectedColor","error","console","alert","newMarkedDates","keys","_newMarkedDates$dateS","rest","toISOString","split","formatDateForDisplay","toLocaleDateString","weekday","month","day","handleDateSelect","timestamp","handleStartWorkout","scheduledWorkoutId","workoutId","navigate","navigateToCreatePlan","style","styles","container","children","backgroundColor","background","calendarBackground","textSectionTitleColor","textSecondary","selectedDayBackgroundColor","selectedDayTextColor","white","todayTextColor","dayTextColor","textPrimary","textDisabledColor","textTertiary","selectedDotColor","arrowColor","monthTextColor","indicatorColor","onDayPress","enableSwipeMonths","fileName","lineNumber","columnNumber","dateHeader","dateText","workoutsContainer","loadingContainer","size","loadingText","length","map","workoutCard","workoutInfo","workoutName","templateName","workoutTime","stroke","timeText","toLocaleTimeString","hour","minute","notes","workoutNotes","completedBadge","completedText","startButton","onPress","id","disabled","fill","startButtonText","emptyContainer","emptyText","createPlanButton","createPlanButtonText","fab","create","flex","surface","paddingVertical","spacing","md","paddingHorizontal","lg","borderBottomWidth","borderBottomColor","surfaceLight","fontSize","typography","fontWeight","semibold","padding","borderRadius","marginBottom","flexDirection","justifyContent","alignItems","sm","marginLeft","xs","fontStyle","medium","xl","textAlign","marginTop","position","bottom","right","width","height","elevation","shadowColor","black","shadowOffset","shadowOpacity","shadowRadius"],"sources":["/Users/recep/Gym/screens/CalendarScreen.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, Alert, ActivityIndicator } from \"react-native\"\nimport { theme } from \"../theme\"\nimport { Calendar as RNCalendar, type DateData } from \"react-native-calendars\"\nimport {\n  getScheduledWorkoutsForDate,\n  getScheduledWorkoutsForDateRange,\n  startScheduledWorkout,\n} from \"../services/planningService\"\nimport type { ScheduledWorkout } from \"../models/WorkoutPlan\"\nimport { Calendar, Clock, Play, Plus } from \"lucide-react-native\"\n\nexport default function CalendarScreen({ navigation }: any) {\n  const [selectedDate, setSelectedDate] = useState(new Date())\n  const [scheduledWorkouts, setScheduledWorkouts] = useState<ScheduledWorkout[]>([])\n  const [markedDates, setMarkedDates] = useState<any>({})\n  const [isLoading, setIsLoading] = useState(false)\n  const [isStartingWorkout, setIsStartingWorkout] = useState(false)\n\n  useEffect(() => {\n    loadScheduledWorkouts()\n  }, [])\n\n  useEffect(() => {\n    loadWorkoutsForDate(selectedDate)\n  }, [selectedDate])\n\n  const loadScheduledWorkouts = async () => {\n    setIsLoading(true)\n    try {\n      // Get date range for current month\n      const today = new Date()\n      const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1)\n      const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0)\n\n      // Add buffer days for previous and next month\n      startOfMonth.setDate(startOfMonth.getDate() - 7)\n      endOfMonth.setDate(endOfMonth.getDate() + 7)\n\n      const workouts = await getScheduledWorkoutsForDateRange(startOfMonth, endOfMonth)\n\n      // Create marked dates object for calendar\n      const marked: any = {}\n\n      workouts.forEach((workout) => {\n        const dateString = formatDateForCalendar(new Date(workout.date))\n\n        if (!marked[dateString]) {\n          marked[dateString] = {\n            marked: true,\n            dotColor: workout.isCompleted ? theme.colors.success : theme.colors.primary,\n          }\n        } else {\n          // If there are multiple workouts on the same day\n          marked[dateString].dots = [{ color: workout.isCompleted ? theme.colors.success : theme.colors.primary }]\n        }\n      })\n\n      // Mark selected date\n      const selectedDateString = formatDateForCalendar(selectedDate)\n      marked[selectedDateString] = {\n        ...marked[selectedDateString],\n        selected: true,\n        selectedColor: theme.colors.primary + \"33\", // 20% opacity\n      }\n\n      setMarkedDates(marked)\n    } catch (error) {\n      console.error(\"Error loading scheduled workouts:\", error)\n      Alert.alert(\"Error\", \"Could not load scheduled workouts.\")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const loadWorkoutsForDate = async (date: Date) => {\n    try {\n      const workouts = await getScheduledWorkoutsForDate(date)\n      setScheduledWorkouts(workouts)\n\n      // Update marked dates to highlight selected date\n      const newMarkedDates = { ...markedDates }\n\n      // Remove selected state from all dates\n      Object.keys(newMarkedDates).forEach((dateString) => {\n        if (newMarkedDates[dateString].selected) {\n          const { selected, selectedColor, ...rest } = newMarkedDates[dateString]\n          newMarkedDates[dateString] = rest\n        }\n      })\n\n      // Mark new selected date\n      const selectedDateString = formatDateForCalendar(date)\n      newMarkedDates[selectedDateString] = {\n        ...newMarkedDates[selectedDateString],\n        selected: true,\n        selectedColor: theme.colors.primary + \"33\", // 20% opacity\n      }\n\n      setMarkedDates(newMarkedDates)\n    } catch (error) {\n      console.error(\"Error loading workouts for date:\", error)\n    }\n  }\n\n  const formatDateForCalendar = (date: Date): string => {\n    return date.toISOString().split(\"T\")[0]\n  }\n\n  const formatDateForDisplay = (date: Date): string => {\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"long\",\n      month: \"long\",\n      day: \"numeric\",\n    })\n  }\n\n  const handleDateSelect = (date: DateData) => {\n    const selectedDate = new Date(date.timestamp)\n    setSelectedDate(selectedDate)\n  }\n\n  const handleStartWorkout = async (scheduledWorkoutId: string) => {\n    try {\n      setIsStartingWorkout(true)\n      const workoutId = await startScheduledWorkout(scheduledWorkoutId)\n\n      if (workoutId) {\n        // Refresh the calendar data\n        loadScheduledWorkouts()\n\n        // Navigate to the workout screen\n        navigation.navigate(\"Workout\", { workoutId })\n      } else {\n        Alert.alert(\"Error\", \"Could not start the workout.\")\n      }\n    } catch (error) {\n      console.error(\"Error starting workout:\", error)\n      Alert.alert(\"Error\", \"Could not start the workout.\")\n    } finally {\n      setIsStartingWorkout(false)\n    }\n  }\n\n  const navigateToCreatePlan = () => {\n    navigation.navigate(\"CreateWorkoutPlan\")\n  }\n\n  return (\n    <View style={styles.container}>\n      {/* Calendar */}\n      <RNCalendar\n        theme={{\n          backgroundColor: theme.colors.background,\n          calendarBackground: theme.colors.background,\n          textSectionTitleColor: theme.colors.textSecondary,\n          selectedDayBackgroundColor: theme.colors.primary,\n          selectedDayTextColor: theme.colors.white,\n          todayTextColor: theme.colors.primary,\n          dayTextColor: theme.colors.textPrimary,\n          textDisabledColor: theme.colors.textTertiary,\n          dotColor: theme.colors.primary,\n          selectedDotColor: theme.colors.white,\n          arrowColor: theme.colors.primary,\n          monthTextColor: theme.colors.textPrimary,\n          indicatorColor: theme.colors.primary,\n        }}\n        markedDates={markedDates}\n        onDayPress={handleDateSelect}\n        enableSwipeMonths={true}\n      />\n\n      {/* Selected Date Header */}\n      <View style={styles.dateHeader}>\n        <Text style={styles.dateText}>{formatDateForDisplay(selectedDate)}</Text>\n      </View>\n\n      {/* Scheduled Workouts */}\n      <ScrollView style={styles.workoutsContainer}>\n        {isLoading ? (\n          <View style={styles.loadingContainer}>\n            <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n            <Text style={styles.loadingText}>Loading workouts...</Text>\n          </View>\n        ) : scheduledWorkouts.length > 0 ? (\n          scheduledWorkouts.map((workout) => (\n            <View key={workout.id} style={styles.workoutCard}>\n              <View style={styles.workoutInfo}>\n                <Text style={styles.workoutName}>{workout.templateName}</Text>\n                <View style={styles.workoutTime}>\n                  <Clock stroke={theme.colors.textSecondary} size={14} />\n                  <Text style={styles.timeText}>\n                    {new Date(workout.date).toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}\n                  </Text>\n                </View>\n                {workout.notes && <Text style={styles.workoutNotes}>{workout.notes}</Text>}\n              </View>\n\n              {workout.isCompleted ? (\n                <View style={styles.completedBadge}>\n                  <Text style={styles.completedText}>Completed</Text>\n                </View>\n              ) : (\n                <TouchableOpacity\n                  style={styles.startButton}\n                  onPress={() => handleStartWorkout(workout.id)}\n                  disabled={isStartingWorkout}\n                >\n                  {isStartingWorkout ? (\n                    <ActivityIndicator size=\"small\" color={theme.colors.white} />\n                  ) : (\n                    <>\n                      <Play stroke={theme.colors.white} size={16} fill={theme.colors.white} />\n                      <Text style={styles.startButtonText}>Start</Text>\n                    </>\n                  )}\n                </TouchableOpacity>\n              )}\n            </View>\n          ))\n        ) : (\n          <View style={styles.emptyContainer}>\n            <Calendar stroke={theme.colors.textSecondary} size={48} />\n            <Text style={styles.emptyText}>No workouts scheduled for this day.</Text>\n            <TouchableOpacity style={styles.createPlanButton} onPress={navigateToCreatePlan}>\n              <Text style={styles.createPlanButtonText}>Create Workout Plan</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n      </ScrollView>\n\n      {/* Add Workout Plan FAB */}\n      <TouchableOpacity style={styles.fab} onPress={navigateToCreatePlan}>\n        <Plus stroke={theme.colors.white} size={24} />\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  dateHeader: {\n    backgroundColor: theme.colors.surface,\n    paddingVertical: theme.spacing.md,\n    paddingHorizontal: theme.spacing.lg,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.surfaceLight,\n  },\n  dateText: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.lg,\n    fontWeight: theme.typography.fontWeight.semibold,\n  },\n  workoutsContainer: {\n    flex: 1,\n    padding: theme.spacing.md,\n  },\n  workoutCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: theme.borderRadius.md,\n    padding: theme.spacing.md,\n    marginBottom: theme.spacing.md,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  workoutInfo: {\n    flex: 1,\n  },\n  workoutName: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.typography.fontSize.md,\n    fontWeight: theme.typography.fontWeight.semibold,\n    marginBottom: 4,\n  },\n  workoutTime: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 4,\n  },\n  timeText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.sm,\n    marginLeft: theme.spacing.xs,\n  },\n  workoutNotes: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.sm,\n    fontStyle: \"italic\",\n  },\n  startButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: theme.borderRadius.md,\n    paddingVertical: theme.spacing.sm,\n    paddingHorizontal: theme.spacing.md,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  startButtonText: {\n    color: theme.colors.white,\n    fontSize: theme.typography.fontSize.sm,\n    fontWeight: theme.typography.fontWeight.medium,\n    marginLeft: theme.spacing.xs,\n  },\n  completedBadge: {\n    backgroundColor: theme.colors.success + \"33\", // 20% opacity\n    borderRadius: theme.borderRadius.md,\n    paddingVertical: theme.spacing.sm,\n    paddingHorizontal: theme.spacing.md,\n  },\n  completedText: {\n    color: theme.colors.success,\n    fontSize: theme.typography.fontSize.sm,\n    fontWeight: theme.typography.fontWeight.medium,\n  },\n  emptyContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing.xl,\n  },\n  emptyText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.md,\n    textAlign: \"center\",\n    marginTop: theme.spacing.md,\n    marginBottom: theme.spacing.lg,\n  },\n  createPlanButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: theme.borderRadius.md,\n    paddingVertical: theme.spacing.sm,\n    paddingHorizontal: theme.spacing.lg,\n  },\n  createPlanButtonText: {\n    color: theme.colors.white,\n    fontSize: theme.typography.fontSize.md,\n    fontWeight: theme.typography.fontWeight.medium,\n  },\n  loadingContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing.xl,\n  },\n  loadingText: {\n    color: theme.colors.textSecondary,\n    fontSize: theme.typography.fontSize.md,\n    marginTop: theme.spacing.md,\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing.lg,\n    right: theme.spacing.lg,\n    backgroundColor: theme.colors.primary,\n    width: 56,\n    height: 56,\n    borderRadius: 28,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    elevation: 4,\n    shadowColor: theme.colors.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n})\n\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}