{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar API_BASE_URL = \"https://api.stoicstrength.com\";\nvar AUTH_TOKEN_KEY = \"auth_token\";\nvar LAST_SYNC_KEY = \"last_sync\";\nexport var getAuthToken = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      return yield AsyncStorage.getItem(AUTH_TOKEN_KEY);\n    } catch (error) {\n      console.error(\"Error getting auth token:\", error);\n      return null;\n    }\n  });\n  return function getAuthToken() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var setAuthToken = function () {\n  var _ref2 = _asyncToGenerator(function* (token) {\n    try {\n      yield AsyncStorage.setItem(AUTH_TOKEN_KEY, token);\n    } catch (error) {\n      console.error(\"Error setting auth token:\", error);\n    }\n  });\n  return function setAuthToken(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var clearAuthToken = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    try {\n      yield AsyncStorage.removeItem(AUTH_TOKEN_KEY);\n    } catch (error) {\n      console.error(\"Error clearing auth token:\", error);\n    }\n  });\n  return function clearAuthToken() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var isLoggedIn = function () {\n  var _ref4 = _asyncToGenerator(function* () {\n    var token = yield getAuthToken();\n    return token !== null;\n  });\n  return function isLoggedIn() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var login = function () {\n  var _ref5 = _asyncToGenerator(function* (email, password) {\n    try {\n      var response = yield fetch(`${API_BASE_URL}/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      if (response.ok) {\n        var data = yield response.json();\n        yield setAuthToken(data.token);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n      return false;\n    }\n  });\n  return function login(_x2, _x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var register = function () {\n  var _ref6 = _asyncToGenerator(function* (email, password, name) {\n    try {\n      var response = yield fetch(`${API_BASE_URL}/auth/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password,\n          name: name\n        })\n      });\n      if (response.ok) {\n        var data = yield response.json();\n        yield setAuthToken(data.token);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error(\"Error registering:\", error);\n      return false;\n    }\n  });\n  return function register(_x4, _x5, _x6) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var logout = function () {\n  var _ref7 = _asyncToGenerator(function* () {\n    yield clearAuthToken();\n  });\n  return function logout() {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var uploadData = function () {\n  var _ref8 = _asyncToGenerator(function* () {\n    try {\n      var token = yield getAuthToken();\n      if (!token) {\n        return false;\n      }\n      var workoutsJson = yield AsyncStorage.getItem(\"workouts\");\n      var journalEntriesJson = yield AsyncStorage.getItem(\"journal_entries\");\n      var workouts = workoutsJson ? JSON.parse(workoutsJson) : [];\n      var journalEntries = journalEntriesJson ? JSON.parse(journalEntriesJson) : [];\n      var response = yield fetch(`${API_BASE_URL}/sync/upload`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          workouts: workouts,\n          journalEntries: journalEntries,\n          timestamp: new Date().toISOString()\n        })\n      });\n      if (response.ok) {\n        yield AsyncStorage.setItem(LAST_SYNC_KEY, new Date().toISOString());\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n      return false;\n    }\n  });\n  return function uploadData() {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var downloadData = function () {\n  var _ref9 = _asyncToGenerator(function* () {\n    try {\n      var token = yield getAuthToken();\n      if (!token) {\n        return false;\n      }\n      var lastSync = (yield AsyncStorage.getItem(LAST_SYNC_KEY)) || \"1970-01-01T00:00:00.000Z\";\n      var response = yield fetch(`${API_BASE_URL}/sync/download?since=${lastSync}`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        var data = yield response.json();\n        if (data.workouts && data.workouts.length > 0) {\n          var workoutsJson = yield AsyncStorage.getItem(\"workouts\");\n          var localWorkouts = workoutsJson ? JSON.parse(workoutsJson) : [];\n          var mergedWorkouts = _toConsumableArray(localWorkouts);\n          data.workouts.forEach(function (remoteWorkout) {\n            var index = mergedWorkouts.findIndex(function (w) {\n              return w.id === remoteWorkout.id;\n            });\n            if (index >= 0) {\n              mergedWorkouts[index] = remoteWorkout;\n            } else {\n              mergedWorkouts.push(remoteWorkout);\n            }\n          });\n          yield AsyncStorage.setItem(\"workouts\", JSON.stringify(mergedWorkouts));\n        }\n        if (data.journalEntries && data.journalEntries.length > 0) {\n          var entriesJson = yield AsyncStorage.getItem(\"journal_entries\");\n          var localEntries = entriesJson ? JSON.parse(entriesJson) : [];\n          var mergedEntries = _toConsumableArray(localEntries);\n          data.journalEntries.forEach(function (remoteEntry) {\n            var index = mergedEntries.findIndex(function (e) {\n              return e.id === remoteEntry.id;\n            });\n            if (index >= 0) {\n              mergedEntries[index] = remoteEntry;\n            } else {\n              mergedEntries.push(remoteEntry);\n            }\n          });\n          yield AsyncStorage.setItem(\"journal_entries\", JSON.stringify(mergedEntries));\n        }\n        yield AsyncStorage.setItem(LAST_SYNC_KEY, new Date().toISOString());\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error(\"Error downloading data:\", error);\n      return false;\n    }\n  });\n  return function downloadData() {\n    return _ref9.apply(this, arguments);\n  };\n}();\nexport var syncData = function () {\n  var _ref10 = _asyncToGenerator(function* () {\n    var uploadSuccess = yield uploadData();\n    if (!uploadSuccess) {\n      return false;\n    }\n    var downloadSuccess = yield downloadData();\n    return downloadSuccess;\n  });\n  return function syncData() {\n    return _ref10.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["AsyncStorage","API_BASE_URL","AUTH_TOKEN_KEY","LAST_SYNC_KEY","getAuthToken","_ref","_asyncToGenerator","getItem","error","console","apply","arguments","setAuthToken","_ref2","token","setItem","_x","clearAuthToken","_ref3","removeItem","isLoggedIn","_ref4","login","_ref5","email","password","response","fetch","method","headers","body","JSON","stringify","ok","data","json","_x2","_x3","register","_ref6","name","_x4","_x5","_x6","logout","_ref7","uploadData","_ref8","workoutsJson","journalEntriesJson","workouts","parse","journalEntries","Authorization","timestamp","Date","toISOString","downloadData","_ref9","lastSync","length","localWorkouts","mergedWorkouts","_toConsumableArray","forEach","remoteWorkout","index","findIndex","w","id","push","entriesJson","localEntries","mergedEntries","remoteEntry","e","syncData","_ref10","uploadSuccess","downloadSuccess"],"sources":["/workspaces/Mygymapp/services/cloudSyncService.ts"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport type { Workout } from \"../models/Workout\"\nimport type { JournalEntry } from \"../models/JournalEntry\"\n\n// This would be replaced with your actual API endpoints\nconst API_BASE_URL = \"https://api.stoicstrength.com\"\n\n// Keys for AsyncStorage\nconst AUTH_TOKEN_KEY = \"auth_token\"\nconst LAST_SYNC_KEY = \"last_sync\"\n\n// Get the authentication token\nexport const getAuthToken = async (): Promise<string | null> => {\n  try {\n    return await AsyncStorage.getItem(AUTH_TOKEN_KEY)\n  } catch (error) {\n    console.error(\"Error getting auth token:\", error)\n    return null\n  }\n}\n\n// Set the authentication token\nexport const setAuthToken = async (token: string): Promise<void> => {\n  try {\n    await AsyncStorage.setItem(AUTH_TOKEN_KEY, token)\n  } catch (error) {\n    console.error(\"Error setting auth token:\", error)\n  }\n}\n\n// Clear the authentication token (logout)\nexport const clearAuthToken = async (): Promise<void> => {\n  try {\n    await AsyncStorage.removeItem(AUTH_TOKEN_KEY)\n  } catch (error) {\n    console.error(\"Error clearing auth token:\", error)\n  }\n}\n\n// Check if user is logged in\nexport const isLoggedIn = async (): Promise<boolean> => {\n  const token = await getAuthToken()\n  return token !== null\n}\n\n// Login user\nexport const login = async (email: string, password: string): Promise<boolean> => {\n  try {\n    // This would be a real API call in a production app\n    // For now, we'll simulate a successful login\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n\n    if (response.ok) {\n      const data = await response.json()\n      await setAuthToken(data.token)\n      return true\n    }\n\n    return false\n  } catch (error) {\n    console.error(\"Error logging in:\", error)\n    return false\n  }\n}\n\n// Register user\nexport const register = async (email: string, password: string, name: string): Promise<boolean> => {\n  try {\n    // This would be a real API call in a production app\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password, name }),\n    })\n\n    if (response.ok) {\n      const data = await response.json()\n      await setAuthToken(data.token)\n      return true\n    }\n\n    return false\n  } catch (error) {\n    console.error(\"Error registering:\", error)\n    return false\n  }\n}\n\n// Logout user\nexport const logout = async (): Promise<void> => {\n  await clearAuthToken()\n}\n\n// Upload data to cloud\nexport const uploadData = async (): Promise<boolean> => {\n  try {\n    const token = await getAuthToken()\n    if (!token) {\n      return false\n    }\n\n    // Get all local data\n    const workoutsJson = await AsyncStorage.getItem(\"workouts\")\n    const journalEntriesJson = await AsyncStorage.getItem(\"journal_entries\")\n\n    const workouts = workoutsJson ? JSON.parse(workoutsJson) : []\n    const journalEntries = journalEntriesJson ? JSON.parse(journalEntriesJson) : []\n\n    // This would be a real API call in a production app\n    const response = await fetch(`${API_BASE_URL}/sync/upload`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        workouts,\n        journalEntries,\n        timestamp: new Date().toISOString(),\n      }),\n    })\n\n    if (response.ok) {\n      // Update last sync timestamp\n      await AsyncStorage.setItem(LAST_SYNC_KEY, new Date().toISOString())\n      return true\n    }\n\n    return false\n  } catch (error) {\n    console.error(\"Error uploading data:\", error)\n    return false\n  }\n}\n\n// Download data from cloud\nexport const downloadData = async (): Promise<boolean> => {\n  try {\n    const token = await getAuthToken()\n    if (!token) {\n      return false\n    }\n\n    // Get last sync timestamp\n    const lastSync = (await AsyncStorage.getItem(LAST_SYNC_KEY)) || \"1970-01-01T00:00:00.000Z\"\n\n    // This would be a real API call in a production app\n    const response = await fetch(`${API_BASE_URL}/sync/download?since=${lastSync}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n\n    if (response.ok) {\n      const data = await response.json()\n\n      // Merge with local data (this would need a more sophisticated merge strategy in a real app)\n      if (data.workouts && data.workouts.length > 0) {\n        const workoutsJson = await AsyncStorage.getItem(\"workouts\")\n        const localWorkouts = workoutsJson ? JSON.parse(workoutsJson) : []\n\n        // Simple merge strategy: replace local with remote if newer\n        const mergedWorkouts = [...localWorkouts]\n        data.workouts.forEach((remoteWorkout: Workout) => {\n          const index = mergedWorkouts.findIndex((w) => w.id === remoteWorkout.id)\n          if (index >= 0) {\n            mergedWorkouts[index] = remoteWorkout\n          } else {\n            mergedWorkouts.push(remoteWorkout)\n          }\n        })\n\n        await AsyncStorage.setItem(\"workouts\", JSON.stringify(mergedWorkouts))\n      }\n\n      if (data.journalEntries && data.journalEntries.length > 0) {\n        const entriesJson = await AsyncStorage.getItem(\"journal_entries\")\n        const localEntries = entriesJson ? JSON.parse(entriesJson) : []\n\n        // Simple merge strategy: replace local with remote if newer\n        const mergedEntries = [...localEntries]\n        data.journalEntries.forEach((remoteEntry: JournalEntry) => {\n          const index = mergedEntries.findIndex((e) => e.id === remoteEntry.id)\n          if (index >= 0) {\n            mergedEntries[index] = remoteEntry\n          } else {\n            mergedEntries.push(remoteEntry)\n          }\n        })\n\n        await AsyncStorage.setItem(\"journal_entries\", JSON.stringify(mergedEntries))\n      }\n\n      // Update last sync timestamp\n      await AsyncStorage.setItem(LAST_SYNC_KEY, new Date().toISOString())\n      return true\n    }\n\n    return false\n  } catch (error) {\n    console.error(\"Error downloading data:\", error)\n    return false\n  }\n}\n\n// Sync data (both upload and download)\nexport const syncData = async (): Promise<boolean> => {\n  const uploadSuccess = await uploadData()\n  if (!uploadSuccess) {\n    return false\n  }\n\n  const downloadSuccess = await downloadData()\n  return downloadSuccess\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}